(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    311761,       6452]
NotebookOptionsPosition[    303672,       6336]
NotebookOutlinePosition[    304016,       6351]
CellTagsIndexPosition[    303973,       6348]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Generating Figures 2 and 3 in the article \[OpenCurlyDoubleQuote]Obscuring \
digital route choice information prevents delay-induced congestion\
\[CloseCurlyDoubleQuote]\
\>", "Title",
 CellChangeTimes->{{3.8232417712012277`*^9, 3.8232418635349584`*^9}, {
  3.8425962631661625`*^9, 
  3.842596264982048*^9}},ExpressionUUID->"3ab84d70-09e3-4cd5-936e-\
7bd5c0dd6ec3"],

Cell[CellGroupData[{

Cell["\<\

Figure 2: Routing in a two-route network with delayed information\
\>", "Chapter",
 CellChangeTimes->{{3.823241890985483*^9, 
  3.823241966729704*^9}},ExpressionUUID->"93ac14aa-6357-4b0b-999c-\
4550ae7f3149"],

Cell[CellGroupData[{

Cell["\<\
Solving the delay-differential equations by numerical integration\
\>", "Subchapter",
 CellChangeTimes->{{3.823241975207148*^9, 
  3.823242032946213*^9}},ExpressionUUID->"d8fb0f20-aa81-43e7-b1e6-\
33cccd8b3f15"],

Cell["\<\
With this notebook, we solve the delayed differential equations of vehicle \
numbers on two streets numerically by integration, plot some resulting street \
load dynamics and find whether congestion arises for given sets of parameters.

To start, we first define our travel time, the corresponding in-rates and the \
differential equations for the two streets A and C.\
\>", "Text",
 CellChangeTimes->{{3.8232396499736905`*^9, 3.823239762493106*^9}, {
  3.8232397930889463`*^9, 3.823239878909628*^9}},
 FormatType->
  "TextForm",ExpressionUUID->"cf9ceeac-b449-43d4-b0c1-9ccb09e84d4b"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8232421954065*^9, 
  3.82324219614672*^9}},ExpressionUUID->"2760af2d-5ba0-4679-9b40-\
00b3c8575baf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Parameter", " ", "set"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"N0V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0A", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0C", "=", "1"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823239902137407*^9, 3.823239907935199*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"93abc3dc-bfe3-4c1b-ba99-cdf1414ce261"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Travel", " ", "times"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8232399108567405`*^9, 
  3.8232399151492767`*^9}},ExpressionUUID->"1f197adf-b394-455d-9645-\
ba11428723a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tA", "[", 
    RowBox[{"t0A_", ",", " ", "N0_", ",", "NA_"}], "]"}], ":=", 
   RowBox[{"t0A", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"NA", "/", "N0"}], "]"}], "-", "1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"NA", "/", "N0"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tC", "[", 
    RowBox[{"t0C_", ",", "N0_", ",", "NC_"}], "]"}], ":=", 
   RowBox[{"t0C", "*", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"NC", "/", "N0"}], "]"}], "-", "1"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"NC", "/", "N0"}], ")"}]}]}]}], ";"}]}], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"27409783-57f0-48af-b8d2-0382e3360153"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"In", "-", "rates"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rINA", "[", 
      RowBox[{
      "\[Beta]_", ",", "N0_", ",", " ", "t0A_", ",", " ", "t0C_", ",", " ", 
       "NA_", ",", " ", "NC_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[Beta]", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"t0A", ",", "N0", ",", "NA"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"t0C", ",", "N0", ",", "NC"}], "]"}]}], ")"}]}], "]"}]}],
        ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rINC", "[", 
      RowBox[{
      "\[Beta]_", ",", " ", "N0_", ",", " ", "t0A_", ",", " ", "t0C_", ",", 
       " ", "NA_", ",", " ", "NC_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"t0A", ",", "N0", ",", "NA"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"t0C", ",", "N0", ",", "NC"}], "]"}]}], ")"}]}], "]"}]}],
        ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8232399278456492`*^9, 3.823239932322184*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"57ab6468-c87b-42c2-991f-4582fced7134"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Delay", "-", 
    RowBox[{"differential", " ", "equations"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NAEqns", "[", 
      RowBox[{
      "\[Nu]IN_", ",", " ", "NAinit_", ",", " ", "t_", ",", " ", "\[Tau]_"}], 
      "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"NA", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Nu]IN", "*", 
          RowBox[{"(", 
           RowBox[{"rINA", "[", 
            RowBox[{
            "\[Beta]V", ",", " ", "N0V", ",", " ", "t0A", ",", " ", "t0C", 
             ",", " ", 
             RowBox[{"NA", "[", 
              RowBox[{"t", "-", "\[Tau]"}], "]"}], ",", " ", 
             RowBox[{"NC", "[", 
              RowBox[{"t", "-", "\[Tau]"}], "]"}]}], "]"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "^", "2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"t0A", "*", "N0V"}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "/", "N0V"}], "]"}], "-", "1"}], 
           ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"NA", "[", 
         RowBox[{"t", "/;", 
          RowBox[{"t", "\[LessEqual]", "0"}]}], "]"}], "\[Equal]", 
        "NAinit"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NCEqns", "[", 
      RowBox[{
      "\[Nu]IN_", ",", " ", "NCinit_", ",", " ", "t_", ",", " ", "\[Tau]_"}], 
      "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"NC", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"\[Nu]IN", " ", "*", 
          RowBox[{"(", 
           RowBox[{"rINC", "[", 
            RowBox[{
            "\[Beta]V", ",", " ", "N0V", ",", " ", "t0A", ",", " ", "t0C", 
             ",", " ", 
             RowBox[{"NA", "[", 
              RowBox[{"t", "-", "\[Tau]"}], "]"}], ",", " ", 
             RowBox[{"NC", "[", 
              RowBox[{"t", "-", "\[Tau]"}], "]"}]}], "]"}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NC", "[", "t", "]"}], "^", "2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"t0C", "*", "N0V"}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"NC", "[", "t", "]"}], "/", "N0V"}], "]"}], "-", "1"}], 
           ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"NC", "[", 
         RowBox[{"t", "/;", 
          RowBox[{"t", "\[LessEqual]", "0"}]}], "]"}], "\[Equal]", 
        "NCinit"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8232399366016703`*^9, 3.823239945943143*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6c5c8488-4e15-436b-a4f9-92c522917bd6"],

Cell["\<\
Our differential equation has two fixed points, which we find by determining \
the root of the equation\[CloseCurlyQuote]s right-hand side.\
\>", "Text",
 CellChangeTimes->{{3.823240024158829*^9, 
  3.82324006338597*^9}},ExpressionUUID->"8a3f2b87-fc33-4771-8145-\
fd13975cd5eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Right", "-", 
    RowBox[{
    "hand", " ", "side", " ", "of", " ", "the", " ", "differential", " ", 
     "equation", " ", "for", " ", "one", " ", "street"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DGLN1\[Tau]", "[", 
      RowBox[{
      "\[Nu]_", ",", "N1_", ",", "N2_", ",", "N1\[Tau]_", ",", "N2\[Tau]_", 
       ",", "N0_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Nu]", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"1", ",", "N0", ",", "N1\[Tau]"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"1", ",", "N0", ",", "N2\[Tau]"}], "]"}]}], "]"}]}], 
         ")"}]}], ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N1", "^", "2"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"N0", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"N1", "/", "N0"}], "]"}], "-", "1"}], ")"}]}], 
        ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Function", " ", "which", " ", "gives", " ", "the", " ", "stable", " ", 
      "fixed", " ", "point", " ", "for", " ", "given", " ", "in"}], "-", 
     RowBox[{"rate", " ", "and", " ", "effective", " ", "capacity"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findFixedPoint", "[", 
     RowBox[{"N00_", ",", "\[Nu]0_"}], "]"}], ":=", 
    RowBox[{"Min", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DGLN1\[Tau]", "[", 
            RowBox[{
            "\[Nu]0", ",", "Nx", ",", "Nx", ",", "Nx", ",", "Nx", ",", 
             "N00"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"Nx", ",", "x0"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "0.01", ",", "2"}], "}"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8232400825498285`*^9, 3.823240156294962*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"8baeb300-d5c9-40ef-b914-243e92942369"],

Cell["\<\
Now we have all the tools to integrate the differential equations numerically \
for given parameters.\
\>", "Text",
 CellChangeTimes->{{3.8232401867956085`*^9, 
  3.8232402206374226`*^9}},ExpressionUUID->"b48de4ee-fdc5-4b84-9c5b-\
dcca64436cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "determine", " ", "the", " ", "solution", " ", 
    "of", " ", "the", " ", "delay", " ", "differential", " ", "equations", 
    " ", "numerically"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SolsDDE", "[", 
     RowBox[{
     "\[Nu]IN_", ",", " ", "NAinit_", ",", " ", "NCinit_", ",", " ", "t_", 
      ",", " ", "\[Tau]_", ",", " ", "tfin_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NAEqns", "[", 
             RowBox[{
             "\[Nu]IN", ",", " ", "NAinit", ",", " ", "t", ",", " ", 
              "\[Tau]"}], "]"}], ",", " ", 
            RowBox[{"NCEqns", "[", 
             RowBox[{
             "\[Nu]IN", ",", " ", "NCinit", ",", " ", "t", ",", " ", 
              "\[Tau]"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"WhenEvent", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"NA", "[", "t", "]"}], "+", 
                   RowBox[{"NC", "[", "t", "]"}]}], ")"}], "==", "100"}], ",",
                 " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Set", "[", 
                   RowBox[{"t0", ",", "t"}], "]"}], ",", " ", 
                  "\"\<StopIntegration\>\""}], "}"}]}], "]"}], ",", " ", 
              RowBox[{"WhenEvent", "[", 
               RowBox[{
                RowBox[{"t", "\[Equal]", 
                 RowBox[{"tfin", "-", "1"}]}], ",", " ", 
                RowBox[{"Set", "[", 
                 RowBox[{"t0", ",", "tfin"}], "]"}]}], "]"}]}], "}"}]}], 
           "}"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NA", "[", "t", "]"}], ",", " ", 
           RowBox[{"NC", "[", "t", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", "tfin"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", "t0"}], "}"}]}], ";"}], 
  "\t"}]], "Input",
 CellChangeTimes->{{3.823240230595457*^9, 3.8232402651649265`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"93775b90-81ce-42d9-b283-e5cf3450436c"],

Cell["\<\
In Figs. 2b-d of the article, we show the numerical DDE solutions for three \
different delays and a fixed in-rate. \
\>", "Text",
 CellChangeTimes->{{3.8232402899469757`*^9, 3.82324035401732*^9}, {
  3.823240393543815*^9, 
  3.823240397296548*^9}},ExpressionUUID->"6335ade4-d0a3-44ff-aedd-\
f48273b23709"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Calculate", " ", "the", " ", "stable", " ", "fixed", " ", "for", " ", 
     "the", " ", "given", " ", "in"}], "-", "rate"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Nu]In0", "=", "1.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]1", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]2", "=", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]3", "=", "8"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fp", "=", 
     RowBox[{"findFixedPoint", "[", 
      RowBox[{"1", ",", "\[Nu]In0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol1", "=", 
     RowBox[{"SolsDDE", "[", 
      RowBox[{"\[Nu]In0", ",", " ", 
       RowBox[{"fp", "+", "0.1"}], ",", " ", 
       RowBox[{"fp", "-", "0.1"}], ",", " ", "t", ",", "\[Tau]1", ",", 
       "500"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol2", "=", 
     RowBox[{"SolsDDE", "[", 
      RowBox[{"\[Nu]In0", ",", " ", 
       RowBox[{"fp", "+", "0.1"}], ",", " ", 
       RowBox[{"fp", "-", "0.1"}], ",", " ", "t", ",", "\[Tau]2", ",", 
       "500"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sol3", "=", 
     RowBox[{"SolsDDE", "[", 
      RowBox[{"\[Nu]In0", ",", " ", 
       RowBox[{"fp", "+", "0.1"}], ",", " ", 
       RowBox[{"fp", "-", "0.1"}], ",", " ", "t", ",", "\[Tau]3", ",", 
       "500"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823240381861431*^9, 3.823240529563283*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"279af610-0380-438a-a2ed-8fa8694f2a6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NA", "[", "t", "]"}], "/.", 
      RowBox[{"Sol1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"NC", "[", "t", "]"}], "/.", 
      RowBox[{"Sol1", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", " ", "\"\<number of cars\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<street 1\>\"", ",", " ", "\"\<street 2\>\""}], "}"}]}], ",",
    " ", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<\[Tau]=0\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.823240540251644*^9, 3.823240583744488*^9}, {
  3.823240693702216*^9, 3.823240746380595*^9}, {3.8232407820898175`*^9, 
  3.8232408433521504`*^9}, {3.8232408785356445`*^9, 3.823240914748383*^9}, {
  3.8232409489282303`*^9, 3.8232410349007263`*^9}, {3.823241143937357*^9, 
  3.8232411465614715`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"068701f9-2749-416a-a0ee-00700fc05fea"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rwycX152hP43g3T/H/zA/eI=
          "]]}, Annotation[#, "Charting`Private`Tag$21886#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
f2l93QEMWDbW/z8KHr1N
          "]]}, Annotation[#, "Charting`Private`Tag$21886#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"number of cars\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Tau]=0\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {0, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"street 1\"", "\"street 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8232408388207045`*^9, 3.8232408441546516`*^9}, {
   3.8232408864866877`*^9, 3.8232409155816083`*^9}, {3.8232409496980057`*^9, 
   3.8232409683022537`*^9}, 3.823241035871892*^9, 3.823241161179863*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"465d20ae-bca8-4a3c-a057-5165db453f0f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NA", "[", "t", "]"}], "/.", 
      RowBox[{"Sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"NC", "[", "t", "]"}], "/.", 
      RowBox[{"Sol2", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", " ", "\"\<number of cars\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<street 1\>\"", ",", " ", "\"\<street 2\>\""}], "}"}]}], ",",
    " ", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<\[Tau]=4\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8232406054998217`*^9, 3.8232406071750813`*^9}, {
  3.823240850055027*^9, 3.8232408528687925`*^9}, {3.8232410530938*^9, 
  3.823241054466655*^9}, {3.8232411225397134`*^9, 3.8232411381187496`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"90e96622-f113-4e4b-a55e-4695460119f8"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/jRV2Zt3SgLfpKmJjiYT+Xrr0lVfScK+BR6Bv3uYSLPVfuvqrCRM6bo+WWPO
RK8Cz0QV6UoBZ1u04HZPJmoRFuFNtpCCbDPBda2+THSl8/qNIGcpEFHkmlU6
xERhWzve6sVIgW7O9qnMcCZy7rIOlsqQghnNe+lxJ5iIFDbMxlUsBapnJeyN
4pmIt/eP5lC7FExuLLtpkobfH578rOOFFBhfkptOSmeiEQkBn8pRKahr39h5
KYuJao6r5EStkwb01yBfJw/bJ3Nf0VNQGjjuGB55XIDte2nRaSYjDXL134Ol
S5iIquD7S9hMGlScFmrdrjPR4tnw1k/7pOGC2JY8jgomqmAmJ187KA1Pit5Z
nqlion22F20ORUiD1VWie7yaiVjvlm/ZlSIN3DfduLbWMlG9cNPXhQvSQP4W
vlmujok8jnffar8uDbJj7VPcd5iIe/hdZEqDNAwd/nu57y72l+FPEvWJNHTd
AzHvRibyL1vgEnwjDU1ib06+amIiIdb1b4e+ScO7A/pvRZuZqPPgltKyWWnY
YT8njVqYKOSpQqA/qwykeB2J29PKRNuV9miqCspA1Y21szz3magvk7IyJyUD
U+hn3n3MUb+ce+5ryEDLUaWTxg+YSHbvoexTxjJA/kHtuor5dWO0K8VeBgop
ZbGfMCduSZfl85YBi13kzmnMKjGF0+/CZOCa3Wrt/78Pf65uKT4pA25uhj7X
MJ8hPUjyzZYBE2HOFTJm3Wv91kpXZMC1ZL6oHd//nf2zyO86GTjasfOgIOac
AOZYc4cMCBGKJ4zx++HZSnXCSxkQ2LK8YoXtY6psijQblYGhYvFt6tj+wvM7
SDy/ZCA7KGZ+CvuHMqvK9YZFFizvOLWcxv5b2AdvCnhloanZ8fwK9u/1ZlrJ
AXFZ8B4KvmGN/c8SH6oxjWTh5x02s0Qcr5rRxOVGG1kYdihV8bnFRC7k7O5Y
D1ng58zmk7rJRI3r77hwxcvCYv9MtlY5E/kEPZIZzJSFxNI/eaevMhHf81dT
ecWysI87LKCllImCcmdPybbJwnrZF+Q7+Uy09Q+rNaNfFrhrOtqjLzFR934h
kbufZGFNj8m4RC4TSe7QriYty8LHPI5tnBlM9KEy8rWrvhwkGU69NIplohTu
tGIpKzlwkCX2rEbh+juS5z/pIgc7+HP1Co4xUZZm81JktBxouohtOIrry7R9
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
/mVAtS0k3h/9P2OC3eI=
          "]]}, Annotation[#, "Charting`Private`Tag$22126#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
H2Cgb6o=
          "]]}, Annotation[#, "Charting`Private`Tag$22126#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"number of cars\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Tau]=4\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {0, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"street 1\"", "\"street 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.823241056337947*^9, {3.823241134143841*^9, 3.82324116233158*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"55cea93b-aa89-4814-8202-e108fdda9ce4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NA", "[", "t", "]"}], "/.", 
      RowBox[{"Sol3", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"NC", "[", "t", "]"}], "/.", 
      RowBox[{"Sol3", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "100"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", " ", "\"\<number of cars\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<street 1\>\"", ",", " ", "\"\<street 2\>\""}], "}"}]}], ",",
    " ", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<\[Tau]=8\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8232406102825336`*^9, 3.823240612035683*^9}, {
  3.823240855099948*^9, 3.823240858381013*^9}, {3.823241061313593*^9, 
  3.823241062960847*^9}, {3.8232411492973423`*^9, 3.8232411517571244`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"68df71fc-fe43-41ff-be74-05bc95e305ee"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwlV3k81N/3liiV+ghRUtkqe/adcxjL2IZBpSSJkFJI2UtaSBKSpYUKoU0q
ChESUpYoa2QdM9YxGBH1e39fP/94Pa973/ee53nOuXOO+NHTdsc4OTg4Tq/k
4Pjff4mby5np2ysNjr0Q0FQImYK3PDI7fLwywCFK2+q6xxRUBr3IkvbKB43G
g3p89lNQo+TnucrrA+SkfdkbJz8FdbEt5DnPJujYp7vdsX8SPutcKh73/AXF
Z5M/c9tNwlM9gfPq+X0wXNpv/BEnYbrbPSPgST9kP3S6nr1nEs6L8AywHgyC
kJN8T/v6SUhJoXhO3RiB8kbFnVNfJqA+oduP7jkFCQ+ihT9SJiA6NfnzLWUm
uMfxvS2GCZD3goOq+Ux4Vll9ukVpAvxXJ4T6P5kGE6d53+MCE/DXRK2c+WAG
xBVY4dJd47D5Ywhp4sY8cDk+3FrhMw4WZaspNM9/oKjXWjz7dAyU/x2dE2L+
g4WSa7RfGWMQK+bSKKnHgYaJs6Vjt8Yg4GjJWYdqDvy4c2y/e9gYGNN8qwu/
r0Ch0r/CLZQxGJjocQ2aW4mSHWmbPBZGoS3uemG8NhcO6cYN6U2NQv0e7TV5
4Vy49vx6I6XhUXjll/Syk5sbu3BHzolvo3BxzuKfjtAqNNUiiyg+HQWx5bf3
ljV4MGkbp98Tt1EQTD/G3BTKg2slpc/IO40CDwgYK37gwSttR7bU2o3CVMSp
scNmazAvX8TVxGgUyrl26lTsX4uiKj8cXSRGwZk3sT0yiBdN8z07f9AYYPsc
5O6+50VMtYir+cUAY8rE+dcc6zGXT9HiawcD5OPJu4ai1+OGuvVLm74wYEng
X4BJ2ga8v+bRkXsvGdCwXmMNlzMfBjbQ9phdYECLJX9qYxgflvveX9USzICO
a5O70u7xoUCp+pGTAQwY4s4xVvzJhwfoUcuNx4nzloUjHJ024m7T9ffN9jJA
dnKB/ewAP8bFtJsMKzJASb7tSmAwP07Yye7fJ8sADe9XgkZp/Fj7fG3S950M
MKJ5q7R38CMpaZzrtygDDvR2+6xwFMBEpSec7esYEN1YNrR3nyCm9fIe7Bij
QxzvnTNi5wQRRKKP8tLpkGRxjnPstiDyWhRcsxyiQ0aNoljED0FUyn1eMvqT
DkXlGU5PHDYhx4o+97xGOgy/uNjy104IN7dcydvwhg6j486un/2F8MbKWhbt
JR2YsjrMW4lCKKi5P6nuOR2WHrPWy7QIoU/ZQGBODh0EM9zM7anCeLhNeKb5
Lh2MbppU5NhsRmUd9+1lV+gQYfEmr+XUZvRf9jWUv0SHcm7JW8s3NuOAazXj
UQQddMI4POy/bkZ3A7lzj0PpoHq8dN0/8hbcfdtfn8ufDlIk5f37jETw/r7O
3WuO0OHo3wy86CqCsZ58yiPOdHhQvEH2WYQIBqndvfrFiQ6iSuNLKz6IYPAB
2abH++mwaVvOo+e6W/G/kc9j2TZ0WDUvOsmlLooBs49vvUU6GL+63r7HQRSF
22iHWQZ0iPRZrDh4RhQdlX6dVNGnw9/B9lsvC0Sx/WawYJU2HeabE7UPKW7D
na6vZrap0oH+hOfK693bkfsBO7x0Fx12eQSe6jXdjm4KJfmknXRwF6ftX+Ox
Ha9snyc1S9KhL+WjrEvWdtQuGznCFqND5+XzzWvFd2CYws3/zm6lw2acKFbH
HVh9f/38dhE67PvjlHnEZQd6ct7t/bqZDi1+2ueK7u9AaJC9oCZEBz6FXJf+
9zuQvVFCfFKQDhS6kDnvzx24+8DG208F6BCbeUVF888ONNxb1XSSnw7H9iyu
V14vhnbflrgoG+lg1R2VvXm7GDJ37FXy56ODWtQmfY49YmjWFmA8+x+hp2rm
9xEQw4QNWXItBOb6pXSyyVYMP/I59K8h9o/HlK986yqGA8sJbmkEbtWwupvu
L4Zidw69PU+cXzLQqXL1khj6hcyMviXufxTnWe+TJIbVzXaCJCLeGJ05173Z
Yjj8pp66neDjR4tc0CsSw2MyKfVmBF/HRL4EqVoxbLzt+byM0AMN0qV5O8RQ
LxVUzm+jg/SoXMUMXQzXx0FyFKEnX3Lx/u4FMfxmzSnRQej9a+L71SdbxfGJ
uv6CmRwdatKObk+UF8cuxXG22x46vDBhFgbri+N2GcaVCsLP8/fXDZNdxBFN
VgmoE/57mKeFKfmKo6/HRk4LIzpYz+0S3HxRHCmld4+mmRH6WBuRRh6JY92X
P7n9doQ+C01dja/F8eVWkXftjnQYy3L2L6oWxwmf2RhOF0KPpaCHV2ji6MNU
FJk+QYcDz/L/ScpKoGVJeub6aIKfo37KOl0JnJaScbtyk+DH9UVxxlICd3X9
qdudQoffTjTnKh8JPPq2bWzkMR2S1217f6RAAn+miz3WqCP0944Juq8liVKp
G0KlNzKgRGgz3xVzSSQdsRP/KsKAR1XZOScPSmK+OMf5GCkG+ItUtumGSaLQ
zS28DloM4KufV+v6IIn3pYOsuFwZYC1zbFrITAr78F6gehEDFq+fLe3ZJ4VQ
L+xyqoIBuZNXrmR5SGHl3k9P39QzgOvN4y0qV6XQ6XvMDU/i/S0xoBtaf5JC
zRNuOQfWjMIuhxOJl0g78cZsQRCfyyhwXPBTZcIuYn3UAv4bg1ffw89+1pLG
JOamwI9nxiH3ivvRAXNpFFsv9Krowjika1ja/DkojTPsuZns6+MQk7pZRiFc
Gg9lrF0MzBwHt0Ovf8ZXSmPAjcumtJZxEByikxwtZPCa2XhyM/F7em7Gnn/E
SRYrZvZS5OgToMsvm891QR77X2oLnDWcgsYVBz833JTHQOc1L25aTsGR6WuD
yQ/k0fxg3b1He6fgcjNDWKZKHsdXdp0sOE7sj8uLsOZWQAWe5Qf+CcT+dTJ2
ydcV0O7TE7vIX8R+Lum53amK+OiOUNOYDhOEZvf/N52riOMw2hoOTMgdjJIp
KVbEE2VnVvMaM6GhasTZqlsRowyK/olaE/sv5tT4bt+DR7bwOW10YULe8q7U
4qw9eCmlgN8kkgmefxLvZzsq4fs//h0HPjEhiTL+MfiIEv5cStJZ/ZkJFQ9N
Rq29lFAt6hL7yVcmbCb/1mAHKqGmg2BlaysT6pKcm01TlJCSvF06o58JsyNF
bJEMJcwecPsyM8QEMV2+bVOPlbBAa1O6Lp0JQf1Vx1OKlDCtZ6d/5iQTZBSl
V9J/KKHxXHhV/SIT9l28KPO+Rwkfpq98n7/MhMjvXTbxw0r4dNzX/QrHNHSF
3LinNUecf3PDqxWrpiGmlqV+TVAZ25cMdTX5pqFIxOqQs6gyFv8zuXeHfxoG
fLIjlaWUMYP7bsW44DToCDo2daoqo3C94uVDW6Zh7EiZl6y9Mp5heBe7i0/D
5jdCN/8eVEbf/OsMLclpMF7tW9hyVBnfZv3nuyg1DfeeS3CG+ivj8aDBMWPp
aajjCJO2CVHG8rYTdxtkpmHW/gdFMlIZTz9M2ESSmwarxai7XxKUMYrROjWj
MA1B1v2VGWnKKF8zKrRnzzRkPdChn3mojAlRr5P3KU1D88ytDeQ8ZfzmkLbP
W3kalkwn1EQLlPGRczB4q0yD9B1TJ+Y7ZRyjZ+vuU50Gh4mMi9UVyriHv09D
UW0aInAhJ7VOGWOI55BF4Oe37BpPNiuj87bovofqhH60p7PYQcTHF+CjrzEN
q3S4t27qU0b+sNNF1QRWuXHYkDGijJl/xF5oak7D4b63nmVTynhL5yI5mcAx
qhvjEuaVMau0PaSPwEVXvd8c+6eM6YZvdYW0CL07P3Zpr1ZBh0uLkZoE3qCw
bcWG/1QwNbnC3JjAOhHndg8IqeCu61IxegT2aG2yLtqugt9bvUCMwIm7ZAJi
dqmgzJ5tHlPE+eXBkXcOK6og/fXCnzwCj37trlDRUMHF4q5/NgQWElMfWWWg
gryj7/36ifiNzsSt7zZRwaYzxXaHCXy6ZkQ131oF23yXs2oI/hX47IT8PhXU
WTcws5bAfKW+mXmHVfDF+8YdmoReR9TVu3d5quBm7ew9loS+L/MX+LNOq+Ba
1jM5M0J/DtlyC/EgFZTcc2ObHOEPNSsyMj1CBSuszPjmCT9ZqetYqQkqKJ7Z
IWtG+G0k0CwjdEcFX+eKnf5C5MOtG0mutx6pYISmzISm7DSoRW77duM1wV9F
qufzrmm4vNTPs+69CnIcO3F2isi3H+ceY3S1CsrqbkxalpiGcyf2vIz8oYKx
g8VlrdunoWZ4ZuRfjwru+yf7+67oNAgfebcjnKaCd9fVC1uLTMM7B8ObgfPE
/qP6ft6bpmFB3/7UyS2q+GHa52XS2mmweCf8mCGuigkndZRyVk/DHZWfPR6y
qhi5wvZyJhfh1+5j1q66qsjs/aRy8C8TwvgC5fc5q+I1w6w7H5lM+Bqj6956
TBX7bxrnSk8wYRs3xz3bU6rIP1r/KojBhPKF6HWWF1Txut+waxfxPnAM3hmF
h6o4OfGvNvcbEy4VlufKDKui1kWN9tTnTPi+51Lf4wlV5JR9pVuVywSpJ2ab
pdiqKL4h82xnJhOq05ujtq9WwzLNMtWWNCasih7wEJBRQ3eevrOsy0yIObhq
5/JJNZxcPGIq6sgEAyVeNiNADStDl6cz7Jgwzc1f2xamhilSjU+FiPfRsWDb
8ZexanhcY/lfjyETdvKoP3d7poaPBPgUOmWJ96/QTb1+TA1F3ilpOsxNAZuv
0iTFWx0N1jZ0/tk5BW61oR7KXhpIm68e43edAHe9XRT2aQ10cV6gVthNgEdB
s3ppoAZWuHL7extPgNfdndwmURoY5sJaVbR7Ak6dbsp0fKyBV5mrA1UmxyFE
WLL/wpAGTt013fg3ZBwSPeudGo9oImlt1q+nt8cg6WcA6ZaXJiZ0r6SfiRqD
29Qdco6+mvjgw64CDB6DVN2Axf4LmthG33qAcWgM0v/bnjaXromspZsZYVJj
8OStX5tojyZmiL99+uPNKFSu3kI9cUAL63Yda7zRzQBapqJFp6sWXjU3TJZr
YAAvGpPMvLXQt2NVRls5AxyDTqtLhmph3Lz8qn2PGDBF/7Sl+54WcsSzS7i9
GbCt3n/Aok8L09yF719fIvp5j+jud3Qt3MifN680RQcvzvTvu6a1sLc0snC0
nw5vdD7XcHJq4y2zS2b3a+lg+XTH0xJJbSwrqjXiTaJDcOzXM7Ke2sj9jPNL
mDId0qUHTqae1kYn4Z21D4n+uLp6/tiqIG20WPvt3cAWon9blnAciNbGa4dq
TUo46ZDjE6x354k2Pi8JNvn6YwR+UHZxr53Uxh8PX0l1XhyBxVHdv4FsbfRT
9QNmINGpRlHnh/9qo/t7nkaZUyNw8kMYo/I/HbykUveM22kEViq1NgQr62DD
YYHq4xojoLwxIpkRoINvLqml7p6lQQlPu3RtmA4aZ+V28E7QwIhDsTTrsg5+
b/wkLUijgcNU9y+XJB3kZr97da2DBucaNGXaXutglNWM8qYPNPhXHVf6ulQH
xU+pf/ivmAbR74etEz7q4NK3p3kKr2mQ9vSWv1WrDjJZZ8W+59Dg/bWp0iqW
Dmb8S13TlEgDk4umlAeLOhiZmbs8coMGjUH3+8I5ddFy9wfdnddo8MvTklub
XxcvD15l8kbQwMvlUYqQiC5+N2THvw2lAXPfgsysuC6+rx9rvBpIA07THEq+
si72OLl53DpNg+v6f/titXWx8KtUb/MJGgiq7z3jbaiLW7k796h60WCn1MrU
nVRdTL3UEufhSoMXWw/KrjygS7zn2fmah2mgIVDwvu8IsV8/9puCEw3InC79
d3118WjEmNK1vTT4tlB4JjhIF8uEAwIn7WhwcJp31f4IXcwLVv4WZEuDAbpb
qlq0LnY9vgXSFBqc6CuR5Y/XxVlWa9WSJQ1m2zeWTaXo4lLewgG2OQ3Cmrxs
GjJ0kSe5h3MTmQbctR/6n+To4sp1AiWOpjSIKxcKiM7XxUHDtaGVxjQQLvJZ
5fFWF9MGhdGGRIMHz6tTSR908Rf6cXIa0UA6e6uceK0uCg4qlXQiDQru+Zf9
bdRFIyWnw21AA52kzzY/23TRWWJwaN6ABlXXxQaKe3URY14YGRDY8lJgQApN
Fxt2xJzI06fB95DGVWcndXHgmYGdNoGd/Xem2bF1McUvjT6hRwPa8TA5pb+6
GLTlxI5aAp9ybS1bv0oPKSdiadUEnneUtR1br4e3uAflRwgcYXtxoG6THibu
9uhTIM7jIXcEPN6mh00jEpOpBE6APasv79TDI7FSRtJEPCKaV9NcFfRQwCel
tpvAmYo9cqCuhw5ybV6vCT7yu9TKRfX10Mzw6H/5BN83267bLhrrYXk1PbPR
kAb6mwYG2q30ME3VbAM/oVcNr/bZQgc94v2IVw8m9KRwxa++dUgPd/3i4+Ai
9D4yoy9POamHFgtygpcJf9bzczR/D9BDjpC3rVmEfyVKVWecwvXwqLvR5KQ1
kV+nTEu94vSQGZ587y+RD5WxPC5TyXooHeEx8JHIl1NP6znPZehhQ6vMSIEj
DeroFItLL/XQj380arULDc6u3ji5plgPdzpwN506SgOJXa0J8ZV6eKXbWe7v
MSI/3PZ33m/Rw/AwF78kHxoo9bp4vZvVQ0bi/M4752nQsyTOC8t6+HBCdqP+
JRrEbB3K/8Stj2s+rbmzKpoGQ45e8y1C+rjeZ+Q9L1F/qa2+Vye09DGb/P7l
L6I+TVgqsgGGxP7fnPMFz2nA4ptrWDTXx/ltGvp5RD1bUYI38TjpIzXyyjR3
BQ04Pl/MkgjXx7AGkWW/Lho8HyGR867oo816MXOPfqIeVq0a3xOnjxXXi7vD
6YQfpBhV/Qx9nNAcn940T9RzeWLV/kp9NHK99XBw0wg0v87si+U2QPWQ88er
DoxAeMuxywIbDDCZdke8+egIyE7vlr4jZIA5Xdcilk+MwGXFZ6dzdhug3udM
s6LzI6CV9+ZvpbkBRlt5xaZlj8DD9E+i8zcM8Mr3XY9nfo/AvUPy7XuTDfDU
Nf3RZyvpkCpyK+FNugG6jE/LXdxAh7jkI6v88w0wyl2+KViKDiFxf6bGmw3w
sOJEfjaVDnbnlT8OCABq1V9zK35JzL+H7x9vTAMc27zqnncEA/5t5ZJSeAT4
9If76PY4Yn7s9O69/gRwzXvjsZG7DGDu1bI3LwVciJSivn3LgJ/WrXrVPwF/
ed3oNmUyoCudi6fnP8TUX7uzVx4bhddxOt0tdoiFZrJ97U5jcPTuBu6SfYj1
Ka4cZd5jwJ87oPjwIKJUxfYb+cTvqW9lTOTpo4gy4Y9t36eMgfxslwyvPyJ5
heB23+9jkHUgNMgkATH8ZkrIVttxSJJ6v+ldE+Kq0n5OJZsJCCjRt71vZYiv
LFv8D7pMQeHBWs5OW0McP1/Q7OxH9BOLtoWCew3xddL0OpdLUxCs6y4S62yI
MYm3Qw/kTMH59zFDIacMsXl3Q5XE1BRElbcHOcYbIq9tQsJ3AybcqfJ7KPDd
EPkWPO+XEfNa99E/9jYdhmiZYumm2sIE0ZVXVl3/aYh5nnyiD7uYkE5KPcE5
bIiVTFKw2xgTMqvL1afnDDF5WOBIOO80PKtZV98obISsqNunvllNw4f6bNY1
JyOMeDm23r56Gl5tbvYLdzFC/7LTVd31xPziscj0dTPCFb2zA/u+EfMBp83U
/hNGOCKvkynZS8wnOr/HdoYa4cVzz6s2zhP9e57FcOUdI3z4q6tp0y4W/JwP
cC9MN8J7n1mHXsixoMkkYzD3kRE6cGdaaSiz4E3/TP/NJ8T6/JXbAnosuLDl
fq9ziREqFjo/+mvLAsFrU+0LnUbISEKGTyALVrVv2T/RY4Q3BdQLaKEsWJAy
buvrN8KcBOPflhEs6K1I/V7LMEJOhed23dEsyPtt+O32ghEKcpb78qSx4J7p
Sdtry0YoME3z7LvHgrik5KawFSTsDzh7KfMBCwKUxhrc1pBQs1YxYjSHBQZe
SfXKW0j4uKtyfWAhC5SLys13biOh8NPUzMx3LJDiYtRtFiehVl66cEkpC9Y8
0K/9J03CN/GCfzMrWbA04Wk6I09CcW5fycBqFkzqJn6iKZGQY2VbrGotC763
0z42aJGQwSeU7PmVBTU7N5Iq9UgYKi8z3tvIguIzulVvkISVWpUsg28sot+L
r7hLJqGjWVfkux8sSHAugZtWJFRft6fmWzsLLj8dKo+0JaFkwhuF1k4WHDfT
LjvuSELyQa2BGz3E/dJbPhUcIuGTk4UvvH+xwH/twteFIyQ8sm6oQ7afBfNj
Hd8Nj5GwaK2RVuMAC8Ia3v28dpzgx+TOdhhiwYr81KFvPiRMkJP4XTbMgqvx
QeNb/El42I68bu0IC9b5O866niPhyOHxd1p0FsTbay3lhZCwftrspzmDBZvU
N3OxzhPfJztT9UdZcEfo9zqdSyTUXbc0yz/Ggu2/2wUio0j4LKYyq57AmZ1v
t9ZfJ6HMlh3gPs4C6dIUSf54Eirx62X+IvCze4FyB5OI+zbxFuhNEP6c36/6
KJWESdsCzEMJXOSiqTt6j4TDduqUuwTWNRQmqTwkIc8m5sN7BK6QmLcIySah
9/Iu6QsENuZqt6vKI/QcMvxkRODPw0UH174god9Q/OER4j5KbfJRu1ck7HOx
6TpJ4Jbcc953ikh4iTNnRysR7/6Yff4DJST8/umVkAiBf57QCJH9QMLXMxdz
DQm+rtZCkf4fSbh+dt2H/+lBU2RfK6kl4Yt6aRMVQi9vvrYEzq8kvGxRvOsP
jQVT04VpFs0knMhIsc0i9A5ovf0w8TsJT/1KfalA+PH7zdm8rg4S3piLU08h
/OIMUi/27ifhWq6MU2sJf6MObKp8NUxCBemL3IKE/7y6c3WLDBKK/qVdXe4i
/Pj7piOGRcKnYboivm2EH7+S+lrYxLqirfBCK+FHZQBd5A8JrTK0f7gS+Sd9
We33k5XGqHjrydmWLyx4fkyQY2a1MX5N/WHZVccCFbPZ1bq8xui8Vqe+8hML
9Na+Ef4iaIz7HXa83vOBBTbxqppjO41R/ei7rVEvifz3EwBVWWM8/+8Wf+wz
Fjjaz5iGKhoj06Kr0DeXBUeFXu9bp2mM5mU3tnRmsODcPZVzcmRj1N7gB7tv
sOBPOP/5M1bG2B01EypL1HuEC+tKqa0xCmw+/mb9JRZck3h12/IAEc+BT44B
QUT95yoXnvA2Roc6vbPVriyo63SryzhljPJLNYXDTiyYXZvc3epvjPxKk2/o
e1lg6bO4Qi/UGOcEXeyTzFmwqPyRwhtrjC/U6oSu7GHBgVIH+rPnxvjFV02J
MUfM9+NX//QVGOMVM/EGtclpeLmteMOmImOMvvSH6k6bBp6Iberh5cY4dG3p
6+k2Yn43pl20bjLGy98E6fqF0yDUGLh1kmmM4cde7aT5TIPRvzxFiTljbGy6
0BLtPg2nlH4a7lswxl/XZcb4naahJhG9yleYYOXxdt9es2k4u39NYRy/CfHe
VkQdFJuG7313KHvUTPBkoHOXdAMTEmbKLvoGmuChJ2LLJzYz4VRLvOuhUBP0
JVFeHV3PBKsCN0PyBRNUP3BivzUnMX+fXrNCLMoE150SC/3XPgVhow4RTckm
eCJhrWN1+BR49I+dVywywcwd80e+fZoEvaYtYeOzxHlxVqONVhOw5cW4U8dv
E0z8YWy9Rn0C2LEfdKuXTFDUk51luG0CCiyO/bnLZYorv7zhzp8Yh101L0Ms
BU0RiopJ8XHjsLHMLPiJqikKvdm4ec23MaA9OXvOy98Un9q3tN92HoV92/72
5p4zxQ/9Pc2LxqPw6eZVM0aIKTqsKrl/Tn4UsgJSNntfMsUjh81rCv8w4KhB
ccmJJOL8yRA/T6K/6P229PdUkSnWV3y+pdNHB4rxFc/8ElM8n9T+1/0zHcqK
1jdPlRPfB0plFryiw7272x/61poi0y9/55srdDh4DEn+HcR9jF8BpxXo8OP3
paizi6YYKb+jwejyCBif4GUW/jXFDGmDVx2nR+BNT5Ijm9MMr1k0LKUR82Zi
VbZM4DozvGL8u+SB6gjYxtZ+CRI1Q8/DUju/DtPg6451fGEGZsjeYWq/TPTH
eom3gt4bmWFInWfPBaI/f8ol2r9kaoa/Lt19qKZE9K8M+VfhNmY4rtWvr7GB
mL9eUxwuHDFDneZ+gcyvw1BtmpgaGWmGF/gV7njYD8OwR2lDyFUzpPmOfRI3
HYZVUUOcZ2LMcP+erApe7WEg12r4uCWa4b/DnD/9dwzDV7NuQ+NHZni21/z4
5ckhmPDkCtR7bIZ7Wx63VQ0MwYZohWdqT8zwpnXbEZX2IbCtuyC085UZuupr
HMiuGIJWstQYd5UZvpr86Nd7ewhmvazF/n4yQ0X5Ao+860PE7/25vezPZijo
surM44tDsO9z3QfaN2L9vLWW5qkh6DL3SartN8MNP904i8yH4M/x5M8fhs1w
fnwtWdBwCERjPvx9yzDD96HzDtlaQ3C4fuPx3GkzvPRpH88R6SEYsCjSv7aC
jLp21wO11w7ByhO//C9yk/H94NyDPSuHQOo6T27wGjL+Yt//57g0CB5fDvJ7
byTjA7vPF02mBiFq7JLZ0U1kXNeRXcjDGITcdc/DDm4hY6F8MPwbGIRRy380
C3Eydl7QO3m1fRDWnZQWJe0k4xHDms3CLYMgH0ul6sqQcbtthGL310E49TWz
VE6ZjCWNrIzlqkG4Of6VKalOxpafc3+dygfhJS97p6g2GX0PfWqYKB4ElhU5
nteQjCvOqBY/LRgEAR+/T1wmZCTFK7W2Px8EtRt3FpfIZHySXrJf88kg7H3+
cc+cFRmXQstI9Y8H4VzDuPuELRnlXc/eis8chJSJTXeGHQg9KH5GMQ8G4d16
aOpxJOPY/tuWb+8PwqJ1gnbjETLGn7nn8DR1ELaeKjlV405GzqWVZv7Jg6AX
N5hZ7kXGOrUHQSeTBsH5BW9n0UkypmSI9qclDsL5RvUN+b5kvD1+OXAxfhAy
Jg+TcgLIuPuAqUrczUGo2BAdlBFERjZdafXeuEHoUyx4nhJGRqegoDHKjUFY
YdM1cDOCjIo5ha2hsYNQV75XMuAyGSX3H3PqvT4I8Yrf3ByjyVjws7vVj8CO
6VZZerFkXOZ8r6RBYLENdUNi8WRsi9lxTI7A9HDSTu4kMoZvTnWjEvjlRPkx
RgoZy+f3bM8lcJCzzuOGu2RMqve+uoe4DxsKaQUZZDwsYXpjhMA8+sq7kzPJ
GHpSR7KZiK/52TPPkBwyflbT02IQ8aeKSucefkpG1prSUhWC75HYTLpRPhnV
tjy69yxhEKSXtsvsfk3GiizHz/tuDQLzxJ3j696SsUeuao/ybUL/7k1PpkrI
KHvBoEw3ZRAiLBNGW8vJyFOZd/hc2iCQS3nl3lUR+use5ui/Owh8ctEn7tUQ
fC0t4kLTB6HjzspnEfVkDHvWOGPycBAerL0w7t5I3M/3cStmDYJXyKK8eQsZ
1X+HMo/nDILS6FkfhTYyPnaqd/pI5EvF55OTcz1kPKDUfofr1SBEa9MVu/rJ
KPTpIYwXDoJtntvp8mEyNjE2b1tZQvgVfZB5dYKMLkLu28uJ/OUgk1nCy2Qs
jq1x82gj/Hr7UWWJwxxvGg/9qe4m/NoNZ/q4zFFiOv83tZ/wZ7XGbC6vOXpU
XnvGHif0rpFka4uaY0DloULPVUPAo5GhsV3MHFd8vq+osX4ImrNFAjmlzHFn
oqawiuAQHLmy8Xe9nDl+KY4tKJAYggjjfwtOuuaYb2lj85V4D8hvQnQQzPFJ
878YTosh4JNih0iRzJFDQkTsmN0QPFg58Wfcwhy3qfdXvnAbgoqqruXwg+Z4
S+55kU30EHAYFq14EGyOF+oWLLM7h+Cg8Uh9R7g5Zj9Kvh0+PARvzDYnbYw0
x0e/x9dGTQ+BFyVk16UYc9w40pQgv3YYvjkZWHrcNUcBAcf7pfrD8OhcTZJ8
mTn6PU0Yff18GJaC552PVZrjr4+dcZHvh2FfuPTu9E/m2GZJCTn/ZRjWXo4p
/q/RHH9PbNiyzBiGMwmUXlavOSZINPxeL0MD42dtu4s5LDDm0WQx5tMgPX/1
9DSXBa4oy1X4WEGD36+0SmTXWKDE3I3gUy00eFZ8x+reRguc3LXhtAGbBptq
D/tdkLDAc8VeiaUwArR+WomJsQVez3atGOkcgWjheeuWKAtU/tBVPSDNgKS6
usGq6xY4VXDhuq8+AzKC7wS/vmmBJZZCh7bYMaCoWz87KcUCr7glC5SGMmA4
4/LSvhwLzCpaka3ZzAAjaf6n3TUWuCVvNrQ7fBSWtBR4hrktUczs9M9lBjGP
H3Srmr9kiefurS1cNz8JGzJG+/SiLXHg6mf04Z+CZ4N+/y7GWmLsCPlll8IU
jJyM0OO9bYk1KVWf292n4PCF+0Vijy0xPPZ3kW3rFFhltT8xr7NEOq6XnHNk
gvSk5a27vFZ460FwaoQ20T+ptBb08VnhD5XU2niif3IPPNi8c5MVKoVcjXmw
dxoyOI6vf7nNCqcDOgbL/Ij+TOBqVLWiFeYyV5xi5E0Dl1ZF6IStFR5S1rdp
3MKC/otq7nDbChPw45UVbBbsEtoQ55tmhct1mhbmK2fA+8nI24f3rZCsyr4U
zTcDsy131nE9tsLM+c2y47IzwCO14nVdkRUWDWv+BJcZUKxpWGHXYYVNl74r
tX6agTMHc+Qu/bRCHsUmP5+WGXg3GbH3TR9xnil962LvDBgKq+UJMazw7USw
NWN+Bhy87th2L1jha+7nXptkZiFkrWeG+1ZrvH6YQ9ghehY+pOPn2zussUkn
3Xb01ixwqYrM1EhaY0LrLkmfjFm44dRgKiNvjWPnRLg1i2bhwTPVyQk9azxX
sfC6eWAWaikc+oGHrbFF64NFpeYc8A52euQetcZDde/WTxvOgW3g6/hOD2tU
818YXmU1B10ZHkO6p61xY/AnsUGXOZhkfr3OEWGNaVul8qlX50DwVlrXtYfW
+Gdbr2V2wxys/SHwzT/bGq9dLdc+82MOOITjap3yrFHXqTxKqmcOJu5EvlEo
sEbRwZ9Ne8bnoObRibhvFdbo+EO6t5eHDe+Hhi+XVFvjQ+2Hd8v+Y8OrXUdC
M+uskS6n1RQmxIaMJw5eZ5ut8fuzUsm7kmwIeqVvtKXPGkfG+Bys9dhwavat
FucQcb8rNWmnERvcNVT2jI1YI29xuVu3GRuoJbtEy6ascV+dPPbasYG89ID/
8Yw17mH23ZZ1ZIOBwdY1N+etccs9DV57ZzbIVv3HPvLPGhXff57S8GSDGFfM
uPlKCn45fz53+gQbhE25BlVWU9C1+9vmKF82cNX/buL6j4K7L215j8Fs6PnW
n5e7nYLNzCsnh6PZ8F3g0IMECQqe0HE2OBnLhvq9bckhuyiYu9pr/ZebbCjq
rL9kpUjB1acLqf8ls+HZVpMQdRUKPs7dKjabyoZM5w++2zUoqDDMm55/lw3x
/a+dmfoU7KpMcct7wIarkooOnYYUrE7+uXbkERvCjuVaVJlQ8EyrgPhiFhv8
cyQMn5pTcP3vI44Dj9lwnHFPM8magmaDnW4ZuWw4IiesGE6loGO22bzSEzbs
80mQ8thLweRDj2qTn7LBKn/dVpsDFBRZueJ68zM2GE1f2ajlTMFtOom/e56z
QUuVg0fclYLdX7Lqyl+wQfFsyN81xwi+Bi/f+OezQert7CzLi4JRgc6BCwTe
unBqrPskBW39bn61e8kGfl1Gf7UvBVdwnPQ7T2CecLeO5wEUzMp1lwoj8N/y
nsbkIAo+jYZsSwLPcjh+uhBGQX++NYXjxHmjRi2lXhEUzLau3uRC4L7LVq+o
lylIXi1x/RERT1tNTa5ONAWPidp0FRHxNvAYZkjGUjDfa+rzXYJPtUXpbd54
CoqL7pKgEnxLYtVj525R8LhI+rO2PDa8bMyP7E2hoPDRRDV5Qq/HfLLBtXcp
mBbadpVK6KlIO/Cb6wEFncym1m0m9H5bei3QKIuCQXNXPbMfsgETitkXcgn9
6EuHF9LZUOfBOFv2jILGiwXFAvfYYKu3ZW7xJQVZ7+UM/+d350bzAK1CCr6i
fKi8c5vg9z7X/3UZBcuGl8a04gg/EzummZUUpO8Y0VGKYcMfTx4/xRoKKipH
NoxfYQOvgNfpvEbCf1ntnYVhbEiip0zSWihYUNqRVRHIBtHyWh+pdiI/R017
4v3ZoHB898mMXxS8edNx7QUi34sM9o/9HKTgAb8NTfdcifoQjPIWoVOwvoU9
ft6JDZQPNK/bTAr6HFSYu0kh9E0SorfMUvBcpkNtOVFvLt6mnnwLFNxI868q
QDb4bnp87PoKGxxN/Co1pMyG36M/huq4bbDQ53SspCwbLlZwu69aa4POF05u
2y3BhsQTx45e5LfBlN9re0I2suFNpZRLoKQNdr5MDdw3MQd6KQ69b3bb4Gxb
S9G7wTn4dPKyM0vOBtf6iL771TkHbcJDTj5qNhiTwxMb9mkO5n0yHd1MbHC/
DGVpLm0OIkit7Q/MbfDbLe2SyLg54Nmycn+vtQ02d+U8/hE5B5urj+49sM8G
AwVXcDZ5z4GOiISdjacNUszkjIW15qBqivot9oQNMl8N9/6UnQPLTxdt60/b
IMlubNJ72xwc8u2nmATZIM3/amv/ijk4X/PAUveaDf5zcVUyqZuFSv8dJruf
2qBiWbuPoeUsLM5NxYvm26D2Vb0fnbqzoBZc8XPjaxtU/+bBQZafhdwLrgFL
JTZ4iifML4d3FuJjMzO/1dsg/4mzzAtfZuDI492cYaPE/t0TiTxGM/BvPMWF
LmiLhT++8wYIsSBd7IGovoMt/nHM+mbKNQUbYpTrFPbZovmBndEVXZNwYabq
zHZHWyS/+OmpUzAJR2qG6/852eKOHCpZ7fAkSJyUC65ys8Wii3+bPd9NwOO3
RT/Mztii6y0f0ZWnx+EFpSHOLtEWt3k7JRhOMmD7u8M6pCRbXM6PSzxQy4Cb
4sxh1WRbVFx9vf/OAwb4zvLrb7pji+IVcR/u2zNA5Y7jWPtDW/TeMP6vspQO
RcODZs4FtnhrYHO42+0RKAtb5PBqtsXrlE02EgHDwM6nMSNbbLHWIk4xlDoM
SoMtffe/2+Kr547aUnuGIcv8aUVrB8Fn9EXm8bEhiBE6FAH9tnin54rDd09i
Xn1Z9k+IZYtV/dPBT32Jfncwb0p51haHolcdtrUfhM9Cyb+s2MR5n7iNKRrE
/BR+6kPkoi2aTqbf3bc8ABIWOy5MclJx27oqscybAzA1GPH3kwAVj3V9bPP+
1A/Swj6TfZuoePV0VGr18344anGg948wFb/7026GJvdD20vlcmVRKv5elnq+
4ng/vA8fCL8vRcU1sz+7/Pj7gf2y0efdLirS4uPT3i33wZ6hEudWaSoepPYe
dmb0wSOLW/prFKiYoZCjVlnZR/R/xssB6lQMuOYtNHOuD6oslCZualKx0yBL
Qu5YH/wJF+15ok3FL0/NT1ba98Gpodn3ffpU3KvR+4JHpQ8cCrLDrEypyNNw
tpCT9gvihhJOepKpqEmOvbm37hfUCp8/FGlBxcK94f7uT3+Bzvl9eu8oVFTH
YHrhmV8gbrl6SXI/FWtMHmpLrf8Faj9ILSIHqPjDXPcmjd0Lpi4RuRudqPjp
7+MCy/5e8D6z4PDvMBU5bLg7l9/2Qtiyuhz7CBUjNG+nWWT1ws0o/xUTR6mY
pOGQrp3QC2/ujj3v8qDiwpap/uWTvVCzU/ryNy8qhvpJ/Whx6oWOfPeDdd5U
fFrRcdbcsheWP/asKjpFxFP9RnyrfC/wUUR6nvlS8aLI0Z9nt/WCRMe+15n+
VOzoeJ7p9x8R33iTS8I5KkpfvVpgOdcDjud4NaKDiHi/ncuUYfSAN4c574UQ
wp8p9u+cnh4Ii7kycDaMiiu/vb1a09IDNwWr3p08T8V91DXiV+p64FH63zi3
CCr6K/XeHSzvgTfSuscORlJR0rGpvr+wBzr03mwkX6WivMnbhPfZPTBawxwx
iKbi4V8KTanpPbBkq1CuHkPFu+WV6wRTe2BD9/Ek+Vgin7oPb1FM7AHxY4+9
JeOoeL3jzmdabA+oTQ2gSDwVg3leT+hH94Bp8A7hjYlU7C26tk/1MsFn5aGJ
1UlUtH/16HtNBMHnRurHv7ep+HDzDq3f4QQf4R9pcylUrHB/Z1sb2gNxDzf6
jqdR8W15yYRqSA88kKOYDt6lYmCbXK9+cA+8LowR7bpPxejhFuZQUA/UQC2r
OYOKu50+zUgT6x2fV36ufUjFUt6UN2uI70ftMaM8k4q8K+05oojzl3rCzhZm
UzHogn/mA+L+DV7Fls9yqHjWpvX4PiI+cdaceGYeke+nnm/PvUTwC1P5nfaU
iiFzUbG3owh+q043xj+nYuRBhfDtBH/H+KdZUflUbD76tdgogeAnQg85X0BF
4azsdZwpBL8sKerZ1wQOz9E5dJ/wS9F198lCKh5vb1hPzSL8end/+ehbKjot
Kln2PSX8MupqPVBMRcqt32/XvCH4fRV6YltK1Is8ZXPDe4LfPvsIszIq/uGz
2SNbQ/Dru7nP4APh38PlcrHmHlj2/iqvXknFSwIq0S+7ekDigkmnxCcqnv/Q
+OnONMFnTWT+llqiPgNXvJtdJvjcKr/C95nIr7JHPbS1vXAiR1Pl71cqppdS
XiTuIvK/SeZ653fCT7SN5DjWC/GSldmLbVQ0ubf9ckwgsT/QsWJrJxWFwpwz
q2OI/N4RNefcQ5xvYpNu9pqop1NDLgPDVMSfK7PDeH+Bd1VoyEo6FR9sYdWG
Sv0CUyGB21KjVPRKari2W/8XLJUZ1ntMUrGuSHkx0pfYvz5DbYxNxGMe5av7
i9jvqmHDu0DF+0e7AxOWiPovbDiu8IeKjzY/WDRb3wcdh5bST/+jYmO5NKeR
fB+YPDuwZna1HZ4aDe3beqoPxCwFe5c22yGT301ox4p+WEp/+nvbVjs80dFG
ogv2QzvLSAC22SE5ucKLQ6Yf4u74kS+K2+GGix6bRO364Q+j8RW3rB1mP3u0
iZ1DvKfR16I26Nrh6/uku52uA/Dqp9ijPfp2RH1zGB4NGYAbSu/e24IdLk5t
NlG9NQDGHbTpRJIdRuvLZzz7NAAFu40PCVvZ4YsgybkphUGIrfmrJOZsh3xp
D6zs1g0B+tGUt7kQ35sdEoVdQzC7tVFFxNUO3coOPHI3HIJDfvfVBI8R667m
1o5BQ6AgqqfF42OHwcvpl9rpQ9DoFwzMMDvMlBvP7G8dBr5ts9YV9+wwheLB
etg0AtW13ZSydDu0yRv+x2SOQJD/R5uSB3bo2PL9tg8/HfpqE6lvsuxQy/ur
4uReOhT4K+/NfWaHqfebtnP/ooNd3alD8e/t0HnQ+BxlgQG3zjC8j/y0w4iF
9YZFVuMgYhriZ99rh6GsnKkQ/3F4tHldkGmfHdr/9+Ole+o4vCqTvyI/ZIe/
x1MYj4fGoXm1b8bvMTukHg6kD5yfgA332K3xf+zQijEnI1EyCdHVK/UrRewx
3yI78W42E8I2bf9P4oA9jrT7NDR4z0BDwZqD4GSPfxJWhvJenoHtlLmsQ872
yLO/Tsfl/gx8uPpVJ8XVHi/6sdqxeQY4f4d48Hrbo/vKiMoZjVmI6movY4fY
44WV0vZ8PHOQmJFw8ss9ezQrPT/04R0b8mS46wP67JG7LSfwhPUitIga/vEZ
sEcus033l70WYem/cHnPIXv8z9tLJO3yIlDYs3EH6Pa4/eRu1mjpIsxWDdkb
MO3xp6XrxWnZP4CHqntWczhg7dFimsHaJeiIuzR9Z4cDUg4bX1//ZRk4Iz9I
JIk74FEZIxL/yDLInf1jf0PSARkO5c38K//CeaczRRd2O2BTRQc/t+5fkJJ2
C3Xf44CttWbi95/8hdOVRtyK4IBvf27WXxP9D276Gc8vmDkgx///4f8BBIx3
PA==
          "]], 
         LineBox[CompressedData["
1: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
eYuGXZfPwus0t8n5eRrzitSs/A/Pwn8BOwcg3Q==
          "]]}, Annotation[#, "Charting`Private`Tag$22366#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9GWJlLUJV0H+T64O7rsJfR2aKFKxKvglV6w3ToHQ95HiyblLKujb5z7ZuIsO
1ovxt7+mqCB34r4EcwKHkXs+Zd1SwUrGoWd/5OmQe09nMOS+CoqlHXbLIPCP
qes8pHwVXHqUnRJO4CWzMXXRlyr4n1ex5VkCy2aYuTHeqmBNRtKZPAJTx7Ji
Kj+q4DqhBMlZAkfjwqP0WhVsDI+V8yX4nl23rz/2QwW3RA6fWyFw+8CTaWxV
waEPFWIlRL7rdNi3CnarYLvEhcE0oh7Vq/sNh+gquPZDak0GUe/+7jc+ZRMq
+MBkZ+4nQo8ENb7ElDkV5NK18+RWIfyL8yv0WlXB00YCg+GEnr1tn9u1OVRx
NeXYpo3qhH+7t7Hy/KeKVX37Kys0CP+iQ3f2Cqni+T0prbcJf7x/N5CLtxP4
4sKudMK/8tOxGfsVVdFxU9XsAuH38LeOj6qaqtgyYbLNA+kgJK5BX2egigJs
tj0DRL8EVNPVCsiqWH/mepI7iZgPfHpUwUkV03o+/LtiRQfed4E5+ftV8fWC
nX4/hQ4vChb4cwNU0fsc3XC9Ex1Y5MstJcJU8bLW+ZjmvXSwy42NzYxWRe3v
XUl17nSYTN8wmZ6iip55I6w7vOlgtOmHnFCGKipXrzRf8aPD9aupB69nq6K6
bKr7FmJ+1GO3/bz6WhW3x9ZSs4n5Cj2q9CK2SRVt1924eJR4Z1TTpuirXaqo
su9i0tw1Omw+8FYsaoCIr2rU/jCdDm+phkmn5lRx5Mbf6ePEvC/oO/gf26KG
acub1G6U0SGS95SCk7saut4M5ViZocO3BN3Dv73UUDz4wua0ZTpsY2e5Y+uv
hpdiciQpxH1TvnBxg9VZNZTlzfohIDgILH0Zw3BfDWuGRkT+aQzCuaLyPDma
GjY0SLl2Rw5Cgus6meVj6pj5J6S1QnQIDJS5Z4dOqGN+nNXgxx1DwGTnr2mO
VMeUJPftP5SHwOXltiMvrqgjPbSRQ8J0CGQ4NZ55PlXHXp/tanH+Q/CxyFOj
bkQdv6WIRchXDsEs7yfTND8N3GXIKu1yehg8ayK8VXw1USuPfLGOZRQ+cWyx
O7pXC5dGFE4L7pmAgRxFy7aDWugplDOibzoB3GhibO6nhRR6hY+XwwS4hAVo
SEVo4eOU5+YvAiZgYrBqS8cdLUxNYA9UyJuAbXXBvZbdWrjtyYEIDW4GnL7y
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
kw==
          "]]}, Annotation[#, "Charting`Private`Tag$22366#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"number of cars\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Tau]=8\"", TraditionalForm], 
     PlotRange -> {{0, 100}, {0, 2}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"street 1\"", "\"street 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.823241064022212*^9, 3.8232411636042643`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"53e30933-24c0-47b2-8436-2793d20c5583"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"NA", "[", "t", "]"}], "/.", 
      RowBox[{"Sol3", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"NC", "[", "t", "]"}], "/.", 
      RowBox[{"Sol3", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "200"}], "}"}], ",", " ", 
   "\[IndentingNewLine]", " ", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "200"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "60"}], "}"}]}], "}"}]}], ",", " ", 
   RowBox[{"PlotTheme", "->", "\"\<Scientific\>\""}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<time\>\"", ",", " ", "\"\<number of cars\>\""}], "}"}]}], 
   ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<street 1\>\"", ",", " ", "\"\<street 2\>\""}], "}"}]}], " ",
    ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<\[Tau]=8\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8232406175876727`*^9, 3.8232406294454856`*^9}, {
  3.823240860688923*^9, 3.8232408640776405`*^9}, {3.8232410685874553`*^9, 
  3.8232411094608803`*^9}, {3.8232411544275556`*^9, 3.8232411717523546`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"edb96e70-1c09-462b-93f1-82d324ef8e20"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.9, 0.36, 0.054], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFt3c811/Y+G9ERBokSiJkJLuyz2W/bW97ZW+ZSdmiIoSQCpFSRpKdkZ0Z
khSy915vIyt+r/v7uR+/+6/X4/k417nOtc7rXBerlZu2LQkREdESKRHR/3wv
xfx7m8r8Q/o7nnWM13cFfabgvuji8AmFBFXOnNBZQXX38jK4HGrQuF8ASTTv
CmoS8LAnd/iOmtwedxiMLaOWqG7cpv0I+utIHEimvYxWH1DP3MsZQ30BR2Xe
8S+jgIZP3H9fTyAbN/qE3uPLKBG28tafzKD1lajh5W9LqFU8tHzRfgXpmX34
Va+xhD5I0gZe+7SKNiZP8ncLLKG1AZs0r5w19OaTo6Aj7RIKPEcxTni9jjLO
ZQLXn0X0/LmG/cqTvyhZsGi8xmURtT0d8Ji1P0SZaDt848MCCn+R2BovSAT7
do64r88WEK8DMhb+RASrsxtuJMELyPPoUz/PHGK4NX7Dp0FvAR0oiFSvviaF
7LY6vivkCyj9zJBGLPMRGF5gmIX1eSQ/9XCEP+UI6L9n5S4bnUeRD3qJ3J6T
gXV1FeHrl3nE0OArt/TkKBwKt5Py+syjyji2nigqCpiy2Ve75DiPzKzabXgf
U4Cyaniji9E8yiBmfuT8gBLUzAx0D8TnkSDUtcz5UsGh/Bm2IeJ51HPCyejx
NhUsadMd092YQ/dGTs9zeVNDmumvdLqZOVQdaEPl4HEc9Guj3F065pBK1VGN
afsT4PNrQtfw1RwSPLTapF89AYrzMniyp3MoisW8k03yJDw2lwvafzCHvKwq
7uh+PQlRVnoiDS5zSH7a/WtJzymIFoqsCZOdQ6JhzAydDKeBPSG430R0DvFy
tTtPm56GyOdzmq58c4jWiZP27NRpaBeiHMadn0PjS0OW9zZpga2cNvvT31n0
OzqyJFaMDrhsFDLwK7OojV+MMjuADlpO3yvgnJlFhR4J+f1kZ8BpvFHduXcW
3d9UORSnp4daqeIxgYpZ5JW4ra1jTA/youQvdIpmkcON9++dU+nhTEFGZHru
LNLyIdZIuXwW0kifcVWmzSKWf59T/l1nAAWa11ptYbOILtV29YwfAzRXJY5d
CZlFFIhWnq+GAY7QCQgW+M+ilWDXBTMlRpBn3M9h85xF1Uc4xGsNzsHdl7rm
T80w+951P+lLPgcM0QXndo1m0XvF4LHVkXMQRsSkFKw3i6LDB8JZHc7D2mNu
5nG1WXSTOq435B4T8Ixy/ZiVxOz7iK4kf2ECWUf5Izxis0heYymwiOgCaKd6
2YRem0W8sbjLk+EX4N6RHi1/Psx+wS2f/fYL8LaSrOzcFcz+7rcddKeYQXaB
h+Q75yzapz30UnjJDKXHVc/dZZ1Fq8W5LTeHmCH2XuuQI/MsmtQzZvJmvQjP
O466uZ+fRX1bR92jbS+CvK+DVgTDLPr2vKThffZF0D2Eo5/PYP6KWp+tWboI
Rb9bzm+dnkX9t8JLFhhYoNxD2unDyVmkI2U+8lecBQgBx+q6T8yijuPXKY/c
ZAFJT74OB2y9W/X0i05/FhhsZX8iiO3ve7x8+WUKCzyNUR9kxvQPN7eVWH9h
gZdLpxA7I2YfWaY83yALxMSpJl/D7J2XC/25vccC3a/3xJXYMX/um1s1nGcF
vDNvjzrm/1aNxNoTCVa4IPDTXVoY8//f2WBDE1bgaZ8LoMHiSyK5QcPmxwqu
b5waixSw/Pp2vVpKYoXDz41O7FqziHYrvDLkDysoUXuckbWfRQwitirqu6wQ
/FSCduj2LGL2lOk/e+4S1GR537x4fxbxLO9s5RpdgmuKZeI+r2aRAO/vh3d9
LkFC/4zEfazerjsV0sm+vAR07ct2p77MItlpJ6HevkuQ0iYukjc4i4yGB1yI
DdmAAy+4w8Y2h8I7qyb19NlhnfvdJfraORRNnXSbxZsdjKkmmn/3zKEEFW+S
hWfsMBu/c6Rtbg6lNfGxBP9ih6ZPD6LE6OZRaXWaSY4uB4hsPN0ecppHU3n3
uw+0LwOx775YEdMCko1RqM3U5AKfUj/76tBFFKxSnN3tygU1FzRNfV8uomoy
tvh/T7ggrCWUkevTIhL3J7LTaeeCvCb/Mj3s/ynsWEl1iOMGB1yp/BT/EmKX
EzTQl+UB+fmSec3eJUT+l2n5yDVeyLML+RNNt4LkCyN7+XV5IVS6mT+CcwWF
uOzWGt/mhe/aayLO4ivoYKI3Pr+AFwrNykmGzVfQ3644MVO+q1BULMD5MHsF
zeZQPCzi5AMpSWbf+fOr6LLdXddhRT6o8AtLjWdfRTas0waUdnwwu78Yyn91
FY0+b+Axz+AD6qLcHCS9ivofBHYdY+UHluIpqXrzVWTLv3tc8LgA7B356WT4
ehWpDYS9Y2AWAJv413K/s1aRSNgZKSJ+AaDTdqsTL1hFR0YEbn3XEoAfFh+U
39StosWIatLPlgIQQOVnnty6in5eV0tO9RSAE7bXuO1/rKI30fZtLgkC4JpL
PmU7uooixDct9d4JwByN217szCrymA7ZkSwVgKdlBKqg5VUE0qlc1H0CkDp6
eSlxbxVxzV+pXZ8VgOHIscwK4jV0MrHcYGBHAPgLS4WfHV1DI0s9j3LOC8LV
e4O1NqfXUNNLK+Y4XkGYVL10Xe/sGspTWC3xkRIESo1jluvn11DiWoC6pYYg
vGo9bS/FsoYCX1FN4cwFoVBbOlGQfQ3ZKb/0F3AXhB/9uVadnGtIffMyHcN9
QWiJMrE7fWUNiaQXfzh8KgglAxfN96+uISZ1WbmZN4JQEyJ5NVJgDR3Z+f6n
s0gQ7gYx/awSWkMLGTc9S78KQhHDnme8yBrq1lqgTP0lCP3OlBpU19dQxf69
9IfTgpCj2dLAfgN7p7PIxVz+CoIPIw1+BOMI3YQuXQoh0H/IFCMuuoY8iS45
SDIKgWT5C6HrGBvlfjpk4xGCUAI5ZTcmD4ZSz6kkhKD/+vjOcYy5jnzjW1cV
AppRe7L5a1j88g2b/pgKAdtfNjk7zJ5tk+mb9S6YPnvxsRDM3tGjXpvZgUIw
cPQkO2D+NBcRP3kaIwQvHuFtUzF/88xj2H1eC8HPWMLpVB4snlQXvlgUCMGk
TV0ewuIV+DlHB1ePnff6Q0co2xqytRZd4P8pBIXUS/TOF9eQ2ommkLOTQvC6
ylJu6xwWz0qdc4cbQlDnSnLhMj0WT/uxgmkyYehcEgzcO4nFk9ZNuZNeGOJF
N7TuUq2hn04R916JCgNTVYi03eEqqqBnOPlQWRiUQnK8B7axeqt/l3nLWBjE
o34Y7a2tIs9zdb8l/IWB+siNRTSxioybNFzZngiD0JWjF+0HVpGM5yAZVaow
1H77QSL9cxWdbPsr8qdGGJatb5kQ1a+i7TsP2+u6hCFyuytzuWwVjbDS2mSP
CUMLM7NOHNZn5fnwxd8jFQFybv9fh8mrSJ3bdo1eSQR0o5KfpXmsot3IO5VD
+iLgXZ7pedl+FWUtP3yYYScCbycemd81xe5T8XtGoUciwINbXvNXxPyRnpVR
bxQBh+JRPWkG7H7rOseFyl2DdOiYKcH6PKIgD+FVdB3UF7K5KT8sobyx+/9K
Na/DB5GKsHPRS8hEPq45wPw6BMV9Mmb0WEKllEUmVEHXge6hueLc9SV0K2Ej
9HL1dbhgzuF5pn4R9Wff7TGVvAEv5vFqz/sWUGFPwJ1WUVE46rduVUg7j7Ie
2liNK4vCoECCuODWHEq9rqq5ZywKa4uG6uN9cyjiBQP31QBROJBOuDOTOoes
TYsGY+tEwdMicGro6hwyPp7Umt0tCm9e/FlUOz2HtKqDS+snRGHhA++nY1h/
I8miEbtBJgbiwaGGIXXYez05K2eoIgbN9zlSu41n0bFn3wU8TMTgYgPFHU7Z
WUSkWHoh4pYYmF5w/DnPPYsWM0P/VkaLgcmTJK323RnU6Mz84eJPMdB4G/fT
/M0M+sJE9kJ0UgxCNsYHo7G+ubBj4QF+UwzKnYQccD4zKJW/3Cz0rDic45Le
tdOeQd7rOqdnTMTBdXqmNpVqBt3KED88vCUOYWP55m5708hKj3WRIVAcvkVK
MIwsTCONz8uNKq/FIfH1tVdvO6eRvMOvQusCcaizoNraq51G4oxf0vzrxUHz
mVvIbtE04vR77JM3KQ4BlzkGV5KnETOvu13zpjhUsL3knIudRnRD+jqj5BKQ
Qy3z5smjaXQsWgp2zkpAb2+B6LD/NCJC7FdPc0uAnWXj54Hb02hr5di5K+IS
0Nbu/u2R8zRafL1GLq8qAXoqFsSj1tNoHN+3bmoqAUxzpq0zptOoj6Rm9I4L
ti4ccydVfxp1Fr3riA6UAKcLHeJH8NPoq01URWaMBHwkFxFiVJtGFWduZ9a+
lgAyz0KjIaVpVNBklNBfIAFUHaoJWvLTKOsu3CfUS4AH57kPnjLTKJWL05Wq
B2MPNw05NI0S+o+bsE9JgJFvMH291DSKiNhQktqSgIkT/aHLktMoWGJARP+o
JCwzJxK1YOy9WMfqxiAJ5yllxtQx+VuvsmjCuSVBSNfONkgai79GzN5rcUkQ
8zpWZgLTyPDwzmy5qiQk3bBYG5PF8pFv+qvbVBI+1ludPaWI5cNSrn7BRRJe
SX1hnlWeRhKneT4dCZKE1mOKC7YamP/Exq0dMZKQN5vb56YzjSzWHk8kvpYE
08zV6wxG04gwWv7PvEAScLdPdN40n0YPuubOctdLQspeoBGym0b0tYxChG7M
npCe8EqXaZT9SVmtckIScpRiD7vuYPqjs4PVyaTgfi0bc30Ypj+wP4meXgoO
+5MHkp5i+l0oS0YuSwFf+jr10ZRpdFbdcc4DJwXWTK9exBdOoxzJl6QSRlKw
0DPWnF89jSR5Wy8ccZICalZeepNvmD4qbu3ESCkYeal1T2sa07dreMs8RQrs
yvqEX2xg9s6HP+L6KAXsb3nN7UhnUHbrbEVFpxQk/z5+JebSDCKEZbGNnJKG
s3+C6cbtZtCDu31SWZekwdw6fZoXux/09hSGHsLS8JhSQ2Y1cgZJKDpEkeph
8s8No/sLMfkjXJucL6QhRa76Exn5LKLfMDixliUNpwI+rkxg/XPWRBh3Rbk0
0J6/2scrhPW/9TM31QakIQ/Mhv+aY/L3M5vcmREc+dF+Wb52FmX/u/yiPAMB
W5iWumbcHJJc0i8MKUEg0xZTcCZvDnUOPmpXbUJgk2FXfLVtDhEqp4mGZxCM
hH4/o046j5ilforcPwPg1cLKzo7Nj/Z7ca/eGQLwfmIjp/dcQAkaiw0+FgC2
y29GrsQuoNp0hXl1BwBOHVtB77wFxIDbvr51F8B8a4Hu7cICakm42aX4HIBR
943UDYdFxM3HRTr7C2Def7Z10WEJLVhUOfDoyICjr8OOmN8KYiimjzkwloGv
Fyv87qdg/d5R95JuKxlIUlc0qa5aQSkfL5H4ecrAdjnPKDkR1m/thiV/eyoD
t2srVQdlVtHHeO3OW10ycKqw+rQz9v78mf6wAX0y4Kf0+DN99yoiFyc7f2ZU
BrpuPfv1fmwVmY1+tq9akYHF1TuvXYnWEM3VC8Q0J2SB434Q/W3JNeTWNCP8
SV0WxHqtDIg/rqFayHXm1ZeFBpN5ebNKrB+odH+bbSYLlHsmrwJb11D+p53T
GW6yoHr4cJF4ag0RXlARXjyVhanC7wNDDAQkS9vFTZ8kC43rnRssHAQU/yTB
Mv6NLKw/Tb/JIEhAIiEXfjwpkoW/r9mrmXAE5O3Mnx/ySxZwLd5DOE8Cappa
nzkckoWa410P9/wI6KxF2cWAaew8++VLug8JqExXJubuX1lI8VF2XE0kIIrv
ZM0bh7LgMuRRJpBGQIbKbQceFHJg92oZdzKTgHakdFxvMcoB+ZRnw/sSAlIp
O/t+jlUOTr9rjDD+QkBJQoNDdjxyMDj8XSOznoDmc1+fmRSSgxYHv7jIFgIS
57RVt5SQAwYb6zGyTgKKSOd+OCwnBx/OSnTR/SSggfPLX0zU5CBfT/pfaS8B
8SYWbvTpysHShciTCwME5H/yLq/+TTlwjb395dMIAbVHSNj8tMX0qxZXkU4Q
0AUyohQtV2z/c7bBqSkCcg36+rPDWw5uqe/O684SUPVOOJVqkBz0jAu3as4T
EI2XulxLmBxsuBIsfy0QkPnyKT+FWDkQcqjNnVwkoHyH34X1L+Rg/Bz66L9E
QEQTSfMoXQ66LYO8UjDWuml+qSobs2fyEqscxum9bMbihXKQp/h2xA3bT8DP
Pv1cIQdiz/LmWTH9su25rSINchAQ4h1pOEdAcYoexIXf5IBkxZGRdoaAxmuv
ifH3yIFk4cKu1iQBCUnsuucOysEKw/N3p8YIKLSkOot7Sg5Mvz9M1R0ioB7+
0NH3S3JgbXjOj7GfgNhzlBjYt+RA5HbFqHkPAXmxU2ulH2DxIZd8yPmdgL6m
doUxH5UHg6w9PvdWAqJjfFaTfEIewi1ri8UaCMg23ugvA4M8UEr6HIRi+SQP
H7ej5ZYH0+San0kfCUifJDM1VlAe7OOSH9m/I6BMf+ffx8XlQSjjulpJCgHh
PDYUKFTlQa4nh+PXYwJ6sVAW8FAH298vsZkZREBztgElJKby0BW1rPHPC8u/
MTnHv1vyQLOntSZoRkDSAtRbc17yoBqQkTSpTUBrZKebf/vLQ3bPshSvElaP
BRcc86Pk4QbxkmkAHwFxUFz7aJ0rD5n8f0jQ9hrqGxIP1CqWh2Mi308XzK2h
qCLQlPoiDzr9oRk1f7D7Zaa2Rt8uDx8VI/U/Y/extsT6WtuCPLieuLF7w2cN
eUU6kn9el4c0/r63xfZriNPSrfftnjwsfPua1q+3hs3Dfj4BVAogNk38hU1w
DZlYx1UJXFGAjqIw2WWs3906Wafw3EkBwhd5SiUlV1HOdBP9A08FaPwoUnbt
8iq6+aV9xt1XAeaHx0N2T6yir/Z9j1UiFODBY82zk40r6Gn1Sse/bAUIqaA6
33Z8BfHeYta3mVOANtTwKiNuCVk3+9kJOijCsb9s3dQv55GN5GWNLTdF0HqN
L2h2nkd2BV3XKu8qQrDVmU9t0vPIIZmDTCFMEXxiP29UTs0hV7fvbw3fK4JV
onTCtxtzyH3SJ/JCniIsEUj6lI7PIQ8j9tvjJYrQFn12jH9iFnnJ+cjealQE
dYpJU53YWeR7lm0saFIRQgdkmXVWZ5B/VEeL/KIiNL73tHjZOoMCiO/lU24o
wro7ntTx7QwKXmgPiidVAn3tUaUCwxn0qMabOfOSEgim32IQb5tG4SKs5Ld4
lOCb+l07lqxp9Dj725KAkBKULRpdzsT6sah4lqoKGSUgiLE+T1OYRnH2bSad
FkoQc+3rcd9vUyhh0Esu3kEJnLgaXN7kTaFn+ItXDN2V4OmqxV+/uCn0QsJr
dyxICcaqB1mVTadQUj7z+PswJajoeNaHZKdQMkdrq3OMEtR4PZla4ppCqSeY
X26mKgG5u4DMne1J9PpBS3DFeyUoeDy1rzU2idJ3PB2C8pSAVLVkbrZtEmVM
NN+grFaCaaYKE/zrSZTz2eM30xC235eik0l3EuXyMlWPTSpBfiV1C0F2En1M
b3r3flEJBus7RCKFJlF+5Pk7AvtKcO+knQ4Z3SQqJGoy3STFQdrX0N4ZsklU
dMddvoIKB1pN4bejtydQqXkjrfx5HBx7RUPMPTqBynrc9ijYcCDy28Howq8J
VK58bqKDBwcsTD4vfrdNoIrqr21xQjhoC/7xU7duAn0Rdis0EMdBO9vHMy/K
JlBVFmMSkywOkn3Nb77On0DVF77eH1PGgfp5nzSX7AlUG+fq+B6Pg685/E2H
byZQ3VFGvLMRDlwsvxTov5pA02/5VPotcRCq5NV18sUEogZ5OSUnHATRnGUt
jJ9AQoNGkiWeONj5ua4rHjuBDO+5XWPzw87TLjiZ/WQCBdI95HsaioP3W2GL
/yInUEZ+EudhJA625n56iWLcppbP4pKAg7cnTvEYYrwy28g4kIIDG8qNYNOo
CUT3cOC08jscFNunjstHTyBx1jWqzx9xkOBfl3vy6QSyqCIn4yjFAY3wB8Ga
hAn0yIjpIK4aB/IJ+DLNlxMod1PwL1EzDl60+PnXpU6g7qdKq67fcfCDkvkT
7bsJtH315txgLw7In2XeUcidQBfaPMdVRrF4aF6d1yueQLJ24QNlszjwNTI+
L181gRxIUnsur+GAshBPfaJ5AkWnFnUk7OCg5FhyccmPCVQs3tpEQqIMAleS
SW4MTaA/v4dr3I8pwycP5f6ncxOI6PZG2fBpZeAkVj3RuDWBVD9c/FDBpgxH
7DPLP9FOInelaxlcvMpQ2pzy2oZtEiVOqLxKFFGG3q7x9kXhSTR+3jvGU0EZ
AneS7TwMJpFPVPttHntlyLnMxnYpaxKbF8ZvvXBThhlW01O46kn09etfW/J7
yiDPqLEn8msSnfx3yXA8XBme9h02m5JNoUwXH8mkHGWQo1QVL3CdQu2UMdco
ipThXMZ3GIyYQoR3GXzelcoQ6eigXJM5haSHv7NotyvD0pE63ncTU+iXxmWy
Y8uYPScrVoux+Wh3XuLg7pYylDX8ObB5OI1YwvB/pw6UwU+Yu7syE5s/avzn
6k6oAEeUXZru8jQiFfjZ4SOoAvIqCi5rITNI8FRw4pyXCjSkU0tUNc+iCope
rmZ/Fbhkvz3TuzKLZIn4KjMeqIBaaY60FcMc0l0ZGDFPUAH/uzerqpzmkHfH
De7fRSogLSaTrk83j748XqmsJ6gAwXNcWc5nAeFIzMeS3VVBlOy4dZjfMvqx
U3Lb554q7D1UEU/8uIyM16jJDYJVQTCHf/jHyDJyHq3gOR2rCrG3P+U0ya+g
6Gp6r/BPqrBvkBAlTLGKenw7ye8sq4IWu/IT8d+ryGJdilfjlhroUT4oaML6
s+Onibp6vNQgRefJa41oAqoQqL9tEqAGt+4/1qnKxt5nV8VKh2g12BiyGFUY
JaCWWQ2V0Hw16BgynalVXUcCw+YOZRtq8G4+P+/iuQ00tM9Kjf6pAXWiUdyM
0AaKOD/5qZFMHf7shE47q26gSUOHv9306nB8kT70ld8GevHT/dGSqDoEJYpJ
qvZtIAWCEI+XjDq0Wf3Lf7W8gQgnNzt2ldXhJz42Ke7IJlLT8DlDYaIOxueX
1/X4NxFR6/2MSwHqQJ4lkjUStIk+zsjhsh+qg4P/hcPxuE1kTE6+yB+tDtyL
+jy33m2iYrkIYak0deg5scNM3LqJLK3Uehsy1WHDW8aF7M8morlP46eSrw5P
hc4mB89vIofquHqDOnUgGp3yb6fcQmeGdO2GW9Xh7an59GcMW6h+j/6Ybbc6
uNjXRTRd3kJMYsl4zwl1SNRQfKYls4VaDW5ubi+oQ1b20etv1LeQt/fFl0Eb
6vCjUjhZzWgLdRW9HY0i0wD3U36rKa5bKKDb9gEtjQZUU5UnSNzbQjxrnFxJ
9BqwyOHswH5/C/WemP/GclEDnO0kx3Qeb6EHfLlumZwacMzg0/2m2C0kqO5K
yyegAUkeVwfuPd9Cw84Cn4tFNSC3dSrG/tUWiowgGEvIaADlb0bdmDdbSDS7
+KBOWQNynpWvLL7fQlPN3m9w2hrwutsZBeRsobhpUcXvxhpwr5rimtTHLYTI
9ub0rDXgVKfuAPenLbTIVvVk0FkDaKtG9SF/C72UDRK09tIAspmMmQCMFS1l
fs35a4Bnb+z8CCa/EUTq4/5QA1rgV5913hZKT21k+vtEA6Qi01WP5m6hFFPe
Xr1EzP/6H1L9WVvoxbn4p8WpGnA04uybzowtFN+3o0qbqQEDGd7PptK2UHSi
BbnnJw34TMNvwJS0hR7rNtd2fdYANuNUnEc8Fp/TfH78tRqQOrq8Nh65hYK6
Eq5Ft2Dx2ztH4h66hXyj91YWuzSAlF1Q66zvFrqjZpWj2q8Bh0fDB3vdtpD7
sVabnDENWLkk8j3fZgs5t/BfpJzXgKs3g/3SDbeQ3aPEfnuCBjyVTrLMVt1C
lvL/4pt2NeDm3yW+FqktZEpio8FBqglky9dq/vFtIe1AwYZxWk1oJskO/Eiz
hdQlXwTIMGnC/bBUDa5/mwi3e3DjNbsmGBXsX67E6k/auz335jVNmOpg1uNt
2ERiIsL2X6Q0YWZ7rJ86bxOJEF6ynlfUhNIR50bKF5voiqt9Yp++JhAyvlqa
O26iy7ydWjfMNcFpT3qoUmsTXZoXoUq014SbJeu6kjc2EYMdSbDOPU3Ap78i
LyLeREfMXjl2vtSEoGbSuOaoDXR4/gj71TeaYBXMnRDnsoF2+52GI3M04d+V
Eu8k9Q20qieqo1ypCVXzDWc9qDbQoPpPya+DmL+hf/6VBK6jP6lHKIZOaEH8
y9f5dNh82Pfvhi01nRYkiNLUrjMT0C9T53oJBi3YFerPtNlcQ13nuv2TWLSA
DK+hQJ++hpoS09YMBLVgfmxy/s7GKiqKFh/o1taClXyt4JhLK8gqmYasQl8L
GOobdsi/L6PTWeN86cZawHk9tDQY+3+610WEuFlpQeRPsbasniXEu/GHm9pT
C4zm6RbIHy+iDCO/ewpPtcDDXjnBjnQe6dhpvuF9pgVvn+ZyXiyZQyS32dpp
X2rBSU2v9WD7OWQR9e3i+GstEDkwnbfqnEVMNeebA/O1QEA+gvThuxmUwP7l
TNl3LQgKEpIKDZpCcoKxKO2nFvwKDEvTQdh7JWXj+KhXCzzHF3tFiaaQlgF1
le6IFqiaprLqPJxE1BGmNmvLWjAXHSEkhPU3lYkC0X0ELUAF3IjebgI5vT1S
VrOlBXwCznpXBCZQy5dcqugDbD05QofQPI4erOwX8tDg4e2w0soV8nEkvN81
eOo0Htiv9et0942hcYp35Dtn8FCfVcdYljuG4JK6cfMFPDxTe5KrYDiGVvhY
H+Sx4oH7kPPUCv8YSpXY/PiMAw/Jc9WUAxRjaF/3FbHNVTxUrrOE+lePog+W
HldUBfHgQLefIZQ8ioxdFfSEruHBJ0XoNa/PKCoLW8oiksKDOq2YxqLoKLJP
qOueATyQ/nOcKjg3iujTn+13yuPhwOOWjPfeCPKqkNJ6pYaHOu6UU/wxI6jE
uJmkXwsPZqSeLJ8MR9DWrlYJnR4eZh7nvOLgGEGiyX/stYzw8Jg32fnpxjDy
kbA5F3UTD7Vb8tprTcOoYmCpvdkSD8SxDqTyKcNo3+9uEKkdHoKcN5nCvYaR
FBOxEHLCQ4eAOfcXzWEU+CVi0tcVD/SjM2+Hrw6jGlO656We2Dr/we4SzTAi
+vdKmeCNh27bV09nCUNI5hXn/lU/PDyPOKxp7x9CIVIFeY5BeJgo9vv1omEI
NQyJW74LxYNVmQujav4QOhL4lXYsDA8WwvnfxtKGkCKzRhNTFB4Wen6xm8QN
obDq3nuGsXgY5pDXLwkbQi1mllcSEvBQdGP+8XLQEDp2OD/0/QUePONyx474
DSHVNK9Yqld4eJhHd3fr3hCKQgeySul4iOX7Y1LnM4Q6RsI2Q97hwWlBJ9E6
YAjRBJ/Kqs7GQ3jKa5aB0CGkyZJsvPsRD3pZ69McT4ZQbC378euFWDydGVtk
Xg6hHxZ5NR6leBCjdXvGmzWEThOLen6swEO07VuqyfIhpJtexz5XjYf5Z/e6
bTuH0DMZ1V72BixfxvK+n6aG0O+xnscWzXj4kcQeVH04hBhCzCRTvuFB5ekb
+VimYWR0aXa59zsevPpZT1ySHEZJ9R7ptD14mHJ9QOphNowGrPZ0NPvwgJMd
Y/cNHUZMpA/JIwfxQJ7dbSz+YRilyr1wJpnCQyiJyFQ3yQgamWBllp7D4rkz
L5chNIJYHnzo8ln6n3q908ZsO4Lefq2+traJh4bB2PzDHyNo0gY3y7uLB9fw
kCk+8lF0maw7yeEAD/3PEmRy2EdRlsLU4Qi5NhhTbmb4246i3Caqts6z2nA/
UU5JZWsULdk98z/GpA3JONlniRfGEN/Ri/yKLNogGL1ncE5xDBUoCSVUcWlD
toAF+5ekMVTaYmiWK6YNw8d79k5oj6O/DuMnZ6W0Ya0A8mpCxpEo5a0GNllt
CNTN74wqHkcVykFcySraUE5uJO5xfgLVtL0jPDbB9DPu7v/bnECFDF0eAeba
MLeVP2F6BZsH7XZX3a21QZq/wDvZchJFkGiuGDhrwwD69+VD1yTSFd9e4PDT
hvb5Bq2msik0n60yVZekDUITPuaOeTNo8K+XTUmqNjw4rkZ1C5uvvyukTWS9
0YYiYdqoS8KzqHhsfSwmRxuUNLzW0itmURDjq+GbFdrASVPYkvdjDtE9Xund
6dcGdsnaNVvmRUTey2iwNKQNt/HMWVVOi2iHXf736Jg2ZPkUfvv4eREN177o
aZ7Thjr3OTEdnSWUvS3z49mONhDsP1W/fLqMpB0S2gQZdeBfoqdaXcIqclQS
q3I01IESkqwKMat1tMzF2FhgqgMMzeil2bN15Hlsp33HQgdOp7Xn/2pZR/4d
ZYOPHXUgrCX/fbnABorVEd3P9tWBGWuOEC2snyw1vyExn6IDpksOLtoVW4jk
3rVypzEdENlkwP023kVhRmfqCqd0wMODqu5L4i6ilths2Z3TASEOv/n27l10
5qC4L4KgAzc069Juqu4hrgci2zmkujAe1r45JLWPNGOFbyxw6EJSvcBkOvsB
6vGgRcI82Pr8xSuylgfIUGdd0Y9PFxjEyx3rXx0gK/oifaobuhDC0GaLoz9E
3ilC3ldwusCeouiLJyGClCzBEmcnXVCLH6KsmiGCln7rljRXXbAYoDr9hYQY
No4lDvz01IXHRxdVnC4Qg6rLLrGkny5IsDLx1uKJYVewQYM6ShcUrxh9qikh
hsvWm5YQqwvWId9IMzuIQTuB845Xgi7cWSBipp0ihpytyOTBFF0weD0qYX2a
BIwqdWdzP+qC93ptmbwdCTxYfLQ3WqCL3Z8eqWIfEsi/UE5zplQX/vy+pu4X
RQIUwReuBVTrwuTImXc7n0hApEATV1CvC4JTc3/e1ZKAxfh9k6kmXSA5t+8T
30UCZfLT99W/60J6a0rMhWUSmLzD8Oz+T134YSAa/WmPBE5mqmSV9OrCyq7V
MVcKUpDs86+cG9CFhiUvKl06UrCn/NR5YVQXKFYYy0wvkkKc+NgYflIXOgdn
DUK5SaHamXbz4awuBAmy6DUIkcJ8igJFxaIubJ/ll2aQIAX6zrvnl1d14ego
bXOALCnIHmbzXdrUhdtGfm0rOFJwFRiU0d/Rhbq8jypOGqSQZEmjF/FPF5h1
hG7PaZNCUxw4VBPrwYf5Hy8c9UmB0ODpRyDTA+OCbLEZQ1Jg3syIvnxMD8Qf
ufwzMyYFlcu96cY0epDggS/twPiOAWVJ9Gk9uJvuZSmA8etwiZZ6ej1ozRtn
f4Dtby93Gdg6pwccYu81m/RIYXs+bZnnoh7cGgo02sCTAjtTN7E5mx4U6p+Z
pFInBS31I2fiOfWgu6fz8zElUvAPvM7VfEUPnvnaNiwjUsj65CCxx68HjB7k
50tvkELPaJIGv4ge8OaK7JjxkQLR6Q5La1E9ML/h+WWGjRR45Q69nkvqQeri
5JQGAykYegmGfwOMr75liKcihdB31smH8npg7RrLWPSPBPJ+P8sTVtaDt0X1
nR+xfP452lJnr64Hyo7pUiHDJCDkxDv7XU8PYj12tosrSMAs2WyP1FgPTgab
zp/KJIGI9lgaUTM9GClxHlaII4Fxvk2R13Z6kORwy0rQlgRoLDhxPU56IP/3
ZtisGgmIPzUyoXDTg0bq0v47wiTwdL3qvvtdPXDkanhI+48YXLtjLU399IBS
WbiMeZwY1AqsZXBBeuB8cf8jZxMxkLtRErOE6UHgnPq+SCQx+M/rBn9P1AOh
pxUu2pTEYNTKaVGZpAcN0090LaaJ4HrWLspM1YPbjHF3b9cTwZrt68PA93rw
NDB7+9NdIrAbWwjkK9WDf3fnZb0+HiL52mqzcxV6oPg79py24SFiTXsqTV6t
Bz/8Zg7NiA/RoOmNg6FGPZB748TLqnGA8H0hAU9+6YHXJj3D5Z/7SPI7o//i
BuYfCvhwM2EHMeYtmvRt68Ee0XWa4ss7aCuqRuLrPlY/8nLum5+3UYGK7V7y
EX3I/V77L7T3L7rclO+rSqcPW7uXGaiOb6FTVUo+OcL6oGR3XIXFjoCWk88Z
Jd7QB9YrBqzha2uo3XdJNERCH4iFSymNA9bQI9H4bSM5feh5dfMgJ3EV7RcN
36XU0YeR3cRysvdLaDrnjreDpz4oVJyQJD49g/QvHAxneesD7XJlPYf0NGqM
eaQ056sPigzF2s2uUyjD6zmDU6g+tF22vnNmeALRzVy8nxOmD7wBmQPEFyZQ
qFHW3HykPuAryrrnLcaRlXR5hXOCPmhcLY8/sj2KuvNl2HJf6ENYnNBVXdVR
JMPWFrmYog/dxUKcX5Sw959iwNTlnT6YejxmsWsdRMM/9g9cS/Uh5JrQUWGV
PqQh/9D+U4U+UJcTpbDI96Kq0uNdK9X6YJf9/PMF3G+Uksyc7t6M6WeNPZ/j
0oOoaTIpC77pg9zdEPWx6J/IL5jfc+27PhgYn265V96NjG1BzrNPH/5Y0/7d
4v6B2npbPhQO6oPP9okwN7cuJKaCp1vHRmWiTPxwv+93xMBvNXV7Th+KFE0W
6CfbUVj6vHrxkj7EPMx/6Jz/DW3R3i7dWNOH69ldqyuRbejXdmjYnV19IBsp
Lc9zbUHyztSrJQf6EM23WXHo1YyKhxIMt0gMYELrR2VeeBNi07pQd/2oAdgv
nItQy25EcfXvuO9SGUBZtO3grd9fEck1vrjPJwzAJTct//2Jr8gjs3T3L60B
6DifyU3QbUBaUc3f7jEZwMtFDmYqonpUe6ApUs5iAIFOo2jItg7xe/Sl7LAb
QKNivsrfX7UodcKCTJzbAEyjvSMotWoRjf6ci+9VA6gR+PIyLrMGBbZ4/K4Q
NIAO9R+bY3XVaEl8V3rvmgH0pnQbBS9XIdOPIZkS4gbAC5xpf3mrUPtFqpP+
0gbwhPi426D/FyQZF3/vi6wBSOT7hnUOVaIPR5jG9hUNwI5//aSPZiU6dzdD
WUrVAFjmyBLjflSgiDnewgBNA4haj1IZsq5AuyYl56p1DCCLpoyfk7wCOXZK
hR4YGMAgTaaQSlk56oOmBWlTA+CgvWzD61uOcEUaukEWBrAvrkJTq1qOyjh6
v9TYGMA1bYVe0qvliPOFOQeRowF0q+ZOkTCXo8Rjs0/AxQBOLNzY7sGYPMB9
K9jDAE7SJ3im8pcj75Vts7o7BvDBzcwtVqscTVnebyb2NYAZmpM/Zu+XI90e
SgHZQAN4x83GTGgoR18V416EhBjAsl7ec9KzFWjKrrLD95EBdP36ra3iVYHI
wyZJbkcYwG2+yLbzYxWIM/O4qHM0lp8tvcuDNysRrvm6i3UcFu9t0vzt+Urk
OGP+xiTRAPQfP1OcCf+CIo4+7tVJMoCc+WCSy6JV6ANnIbVaqgGoO1qtiu9g
8VcakJF/YwDXR1jdi9qxfNkfuSv53gB0acSK2IpqEE341VyRHANge0JKFK9f
i/iz9Md48wxgAbf1O3eoFmm1BNFzFBqAM/c1WUG3OuQxm6V6odQAZNOg4zZV
PYqj6A4+U2EAFTUBzK2F9egnjn2BrB6rT0qiYiL2r2jDQZ3loNEAMk6dVYpa
/or1l956W60GsH2fst+vsRHpt7bUTP8wgNoSzpHGl83o7tzaxvAvAwjS17b8
/LwFvaA8z9PbbwCLT/Yixd62oj/KLgnNYwagbB72anbiG9pzTGytmcLqQZMg
HsLYgZgiag4+zxnAW8G2qAc3O5FZ2ynHrDUs/xbX5DLCu9C4SqnUY2JD0JoU
q2pK+IlInUc875MZwstWn1UBpx7EHkmR5UNpCOqdRxhHFX8hu2/Gp51OGYLM
GWW/6jO9aF71cFqF1RBMVANm3MgHENUtLiY5DkOIWbUeYaAdRLxReLwEtyE0
6rz6QHF5CLm2v628ImgIlzvbNyjMRhBBDRdLLWMIuVVfJAooxhGti0fjEQVM
X/spwYR340jkSdLuPs4QhsYKZofkJ5B3x6LNkpYhmF7yP1COmES76k/FOi0M
YUY2VZOXbwYRa/4Zjwk2hOrY2ux7bYuopVqPzeuBIQhvjMgL3V9CsXw/rA3D
DWGP6/OMjNgyYqFpmWSJNYSoYWpxxY8rCDpKpgvSDOHzDyeli9prKFj16fzP
akOYp2TTkbfdQEQ4HOHsP0N4wPFX3vHvLmr53CC0T2QE200x9M62eyiWE90e
PWIEFeqljyh79hDL0esbWdRGUOXMkcdVtI+giW1LjMkIIivsE018DlCw/OGO
iYQRuP/sSTlzhhiIZEqJX/sYgcgOaUsOFxkYy8+09QUYgYT6O7m7d8igWIkh
4VSIEcR4PcviaCADBw3fy6ERRpDxAh8nYUkOP0ykVe2SsfOC9by+ZR2FN95N
CbxVRkDTlXNpxuEY7Pv8vWlbZwQqArZ9NY3HQD+AizO10QiMlvwditio4NiD
iPITnUZgyf8zaW2cCm4/1RgmDBtBo8rM8qzrcZDP/c1ZTmQMp71ZPRzMTkLq
p6Nra0eMYU8xgKbx2UnYLhSt4KE0hklWc5ncjpOQW56klnLKGLSkfhOdQafg
TLOZR9AlY2Dqfx7HxnUapsemKxTkjWFknYwk6BQdhJ/9q94dZgyPts6GKAsw
QEJLy0R9pDEYV7DPKrozQJpPkk9RjDGsvGrb8s9ngNIBqXcJz40hUlzII1KQ
EabSHuzrZxpDygPPtINr50CW6/SHgSZjMHs0hv3TmWBf9CrFFJkJzKXSm19A
LEAxf/DqF6UJrFH/HuWzZAHa5C7hpuMmsCWGCEqhLMDz77Z55hkT8E2Otolp
ZgGjuopSRw4T+GPf8cFJixVKlXG2y/ImsE1TbEBvfQncja3r/4aaQPLg25aJ
CHagSZsflQw3gXGTl6KG+eyQO+FxeD/KBEb7It06f7HDzK1gSepnJrDOl9hZ
w8IBZkGvSlnem0DU1ueholIOUMvozVFuMQG+omDJH+OXYX7WrDW63QQuO+58
NaTghPCr0zM/u0wglLyEaOwqJzSUbrCb9ZvAHZabjuv3OEG89VSa57wJ1G+X
El88wQVcy6rxydSmUF/0ZzhCghuahH4WjJ40hZOLvr2Mltxgc9e4i+OMKYgc
dtFlP+KGNCLH4/kXTIHuRKx6yw9uoKd9FPaVzxRWWIV0KR14oNjg+HtKYVN4
sTRJnfSEB7RTEr5q3DCFRfHcZZ4iHnjC8Za4H5nCrYL7h2oHPMDjxMPCLG8K
D4fZs4fYrkBLXoG0Nc4UarWn1J2Vr4DduujNLDVTiI0b6JlwvQJHRGv9lrRM
Id97urIu/gq88VdKEtIzhYZnxo88i68A1HWW3TXC7G9to1hqvALDZPq9X26a
wvmrwXT2rVfAT2Vok9gK40KG9hqMGWJs6JTsTEGzuN6pEePSnwtCUU6m0CQn
avQVY12G2/gfrqagksz3ox5jgumuG/1tUzAZBNk6jGPT70eb3DWFzzydhf+j
j2+a4uNrP1Mw1VBgq8bYye3sPM8DU6CcuHSkEuOx+yI26Jkp/Lze3liM8WV6
mmj3l6ZApvJQquh/5HNmPqe/MoXvMVBSgPFGdxLVkfem8E2nOCMPYwp24qKW
UlPYWY8Kzfqf85o6iLX7TOGqD41MCsa+x+zTbM7fBPsArcpQjOniX/55nH4T
Gtm6crUxfn+Sx6c52Qxc8seY/7ZcgTrPiwqcH8xhlKa4MR7j3c2VWKZP5iBS
nqodh7GIT+3gqSJzUAsIH4nFOCvI0mu/whyatI12nmAcG/X27Y82c6gRWuUN
x9jiPSeJ/7w5fG8kxPtjfLj43HyWzgIyBFQtbTFO4Qsmm6C3AOtTjMvWGIu6
O3wYYrCABqppXyuMPddF/3YzWYClekCCOcbTO/3RVewWsEua3myEcSc5U3Wc
iAW8kaq6qoGxM+6IzZPrFrD42b9CDWOKiEXKcFELaFKVUFLFWPZ4lV6ApAWw
1ZZY4DAupTVbspe3AJuBtHhZjFNZXjNJ6VoAxQBu5zrGNBGCLVf1LYB+TfnJ
NYyD1utvMxtaQBq3CqvI//jXNNV2aGIBzCQ4ZUGMu/jveq/etACeIIUhfoxl
XlJcGjO3AGM6WQ8+jC/duuJTb20BFTuiL69gHPfrC3uRrQUEswlf5cGYFGl0
vbW3gC9uvHVcGHtljfglOFqA/TC7HifGk6c8OB86W8ADN6Y5Dox1/Uh+3nGx
gBNstAHsGDdOxgfauVnAsR2KU2wYX9fg4DHwsAD3tX8ZrBi//1z6S+m2BbS/
uXqua+IK0LPi7oveweSdoq9ukPFCWEQ/L/ddC4jsHtNh4OIFh5v7ocf8LKCe
k/SXxS1e4CGVFeoIsQA9Zr5owgYv5Gl0RGvHYf6X1d9gIOfDvmbicgkW0J3k
QC/FxQcxrKtTwokW0CP3eN9ShQ/cN05LnUmygMcCeUMfovlAKMlwoTcdy8fC
hTl0lh9KpyaUbhZg8lVtHiJ0AlDlv0vk0GUBtKOLgWYcgrD1aXo1pNsCBgNt
GaduCILARPfoqx7s/IXoYmcVQchQ/lD7s88CnNVbF++5CUIEvWkwGrOAT+FT
1vHlgqCfX3VIT7AA0h532xZ1IViZCD5opLWE8NkfiULewsCqenSfzcASqAnp
Ykebr0Hxd+7I/h5LuPBVc0WeURxi2ere7f62BJ0qzX5iXnFwvmtYe77fEkha
NRuqpcXh0sWwzZtDlhBIo/Vc1EYcYlwnzcenLGHtBB7xfhIHp+NpIgtbltCz
qR1DqyABLKp0w/sMVjD72ZB/3F0S9lM/bF84bwVcPEaMaaGS0EuQpUUXrOB0
ihGpaaIkRCd54O6zWgF9gHHvr0pJ2JvrLCTjsQI8n2lQK7kU/A5/HEYjYQUm
Vebf81OkoHCQ5Q2/lBVkCFqUu3ySgicCZV+0ECb/zuItT70UyPdNr8XJWYF3
jOXdjBkpKOCUNz2rZgWFDtYXXwhJQ1TTgQDLTSt4wmnvFtQiDeAxLXjB3ApM
SZ/mHPRLw8b5TqFzllYgMFIxFbAgjc2dr0TobK3A+TmNqT8NgpNMD6+dsreC
p7dFn+9dRPC16dZ1GkcrWNG06vYVRHCVSVKUwsUKjlOW4nx0EYw3sYmRuVlB
z9RI6LYtgkQPKnESDyt4WU9Zc/cuAhWmdfFDTyuoObdZtheA4KDpj8S+lxXo
MP7Hdkw5Ulv3rOAe/X/c6eGDVv2tII32P3ZrLlXsi7KCGxT/8ckLG+q1KVbw
fX/j/7F2i6tp7BcrOJj6j+NvzzlZDFrB1e//cfhXUqm6c9bg8eY/9j/DfOKS
kTWU3PmPs7nJ2rxGrSGH7j/uiw5dS7poA+Yz6/+PyTeIGevMbIC+4j/umjFd
0bC3gY2i/zhp4HPjoJsNdH/8j6NeaEgQedqAd+XYtlAwgiC9qXw2LxvYd5Z7
dSQegedp/8tK3jbwgemdzO93CGy+n05xumcDZh3k05llCPSjsk9F+9oAf6BD
hM83BMrKEFbgbwMn+dv4VIcR8DW4eG4H20BGS5PEX2IAluAjs+dDbUAl/e9x
CyoAWqnkm+ihDZD5co220AFsl7bgHj22gVdXIh4kcQLU57BdpIuzAZEY9Q4p
dQD9uP5v/G9tAK/fY/bgBQBO011G550NcPCTCS6lA0hQH/3snWkDpBTXSfU/
YOc9EnlT9cEG2sqfZ3JWA8z7xNxTLbaBkAsmq20TAIGWChz2jTbAOjV2/xS/
DGQKFASmztgAlddKRmqjDHBb5Wj8c7GFpzM3nPvp5GFAubxQb8EWcPm5+maS
iiCrmWF4Z8kWsItiXaqgCDm6MQcJK7YgqcjpQaOpCL7mtio967ZwbTA9stpS
Ec7dOTWuvW8LXBTPa5nDFMHwteMpreN2cMziPs/ID0X4vcXorsJvB+0n9A/M
7ZVAev8IvZOgHXwzjqcqc1eC98SrlY+F7aDlXRfDSV8l8KZuOtp6ww6qJVSF
a6OU4MwlzzQlsIM8e3BgKVQCXfW2Tnm8HcTU8HSP7ivBF+0SLxsdO3hyzGFE
lBwH7Iavzz3Qs4NwvXeLsSdwsGHlbddgZAf3Fy4elbmEg/h7lw5krOzA8+wZ
yXQlHOwGHM+wtLEDJytt5R0tHFiFbivft7MDu48x+nhjHLSFT6y8drAD6+12
62xrHAhFdz6rdbIDC7ljHsQuOEiKL5cYvYVxtFKgkTcOSF5mjB262sHN/geR
BUE4cEqNCbvoYQcG7PUvKB/joPut71V02w7cLqtltUXiYOrKdHF+oR24/i9v
F+ElLxH+b93/+vg9XQH7/3/9sMyz5JGrPbj8L7/zMg0gLvy/dVUBRQX/TXsI
/l+mbBbvvS3iAESc/3HzTX5H59sYc/3H4ke18kvK/4/z8t3/Hh7+H/9/kz1u
mQ==
          "]]}, Annotation[#, "Charting`Private`Tag$22772#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.365248, 0.427802, 0.758297], 
          CapForm["Butt"], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
rYftwLFH/l9O9JyymcDbwUjBwtw/7HY0T2xhyw5+qKr/y5zajCN7rPZQeXd/
5h9OyPLWiOCyh/O45//y77n2CnIBeyjkt/iXe6Nj7tLI2kP6l8rpf1ilf3o1
RdkejmU5/MvlfCpWLDr2cNeN7l+Ob94X5rS2h0AqD/w/bOX9UIzRyR4MdDn/
5fPsclKUHvbAn9g99Q9PNPNIk3vZQ65N/b+c7k0lQ+ZtD4zCL/5lLfZ1mb8+
2Pn1/acFPkrAfvOA7J6fPZBUE2xL2iSgwrtRbjfAHvyrDufwj0qAM3up/Fag
PZwo4+l7SpCAdu8gRAixB+4YC90iBkmIZLeDpTB7cFe4Hn36tCRItGgozodj
8bxP+1QgIQm57KzKU7fsIWP7h3S+uSR4tVSp9cfbQ8660ZlHeZJAe3JDtz7H
Ho5uOf3NPCcFTS2DejW59tDPESNzXF4KAn0+Xap+ZA96wc/9M/SkYKwlxeBN
gT1IdqwvpHtLQbmPiEnxc0y/yVv9qW+lwLDV0yrpoz08rn5Vfk9ZGlJ959xs
h+zhTJuQY4SlDLCp3fA2GrGHhDj+H8VXZeAJK1Wg2pg9WOhxK3SGykBFjeBt
wSl7IB9nYj31SAY6D13L21mwx+a5P98+TskATc5Wd9Jve6Cu+35xx0MWopsO
yDewOUAPtdcBr3A5CGHiOMZt7gDlKh+eWBUqQMlZ8q9+Yw5g5R9jzFakCF3s
ir89JhzgXq/A+S9lirB3LFTQZcoBPkl+Jw98qwh6WxsJ5rMOwEOkefuzVRE2
GqeMFAgOMBmWdjx5QRHAqmn4EIkjcEbnjRwSUYL+hKjVrFOOMJ1Z6br5QQnI
Iuu407gc4eBvU8WCJiU45//b6B6PI3BY7Rw3alOCMEvfqpt8jmDKIfvt1YgS
8PI7BDtecISvT+rPXyVVBq8GJXIh5AhPn31bm1BThow3YRJ8io7wmdrjW/Il
ZWh8Wu3CqewIkx40BYBTBsYE0a/06o7ALGxgkntFGaotuBO39Rwh9k3vW/N4
ZaDYID3ecNkRfGrGQzp/KMPOq4yEKVtHcE2nvyQ9qAwLHhcOUjo4gr2XMteT
KWXonLFa0XNxBEOuws++29h5BeuOPlccQYP488EQiQpU2sUO3Hd3BKVuCjfV
IypQzMGl/97DEeSeS8qVMahA1uDbz0NejiBy25WG5aQKxGfoyZL4OEKK6RNw
PK0CN03wr3j8/mMf+pAz6gGOkPo/duygz3EL/O+5pibcLQ/5j4U+efjshP/H
jaU8pxhT/mPTlF/fLuQ7QvL/OMxO9bTLZ0dI/B8/FS4Py51xhKT/seuXF9Nt
Ak6Q8D8+a1+q98fDCe79j8l6y8NLnjtBzP94UPN9hcmCE8T+j3GPrtDpH3X+
/9y7dfya1oX/mInbJ08d/mNj3a/tKgb/8YZ9gPMn8/84NZB7X9H+P7aP2tGM
cP6PRRPa79e7/cdZqe9lx646Q9z/izezYPyv53/P3XIT757y/o+78m+cR77O
4JVnovD7nArQk1S9l/F3hg/ZfH5vxFTAyGpVVeK6MxzL2C3xkFeBHkbXy+eD
naE06SHTmJ4K9N02STwR5QzzEfjFJm8VGHIRXt1OcQZXR//shLcqgD83/eZV
hTNYnL2/w6WsCjuvDeS415xB43VPhYaFGvx951N5x9MFcvac7HJCNUBbWE01
ZNMF6uV++np2aEGL9YUr7r6uQNJ17Vnsrg7QO7h+eOiPsT75hNgBXbjs+vho
53WMv2eyjlLrwpYPQ4VYCMZfG29f5NQF3uht4p9bGNcy2g6p6UJ4RV18UjrG
Ze8YhdJ0ofz9/Sq6lxj/+9GD/wPape2L
          "]]}, Annotation[#, "Charting`Private`Tag$22772#2"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {{0}, {0}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"number of cars\"", TraditionalForm], None}, {
        FormBox["\"time\"", TraditionalForm], None}}, FrameStyle -> Automatic,
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"\[Tau]=8\"", TraditionalForm], 
     PlotRange -> {{0, 200}, {0, 60}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"street 1\"", "\"street 2\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9, 0.36, 0.054], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6000000000000001, 0.24, 0.036000000000000004`],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.9`", ",", "0.36`", ",", "0.054`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9, 0.36, 0.054]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9, 0.36, 0.054], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.2434986666666667, 0.28520133333333336`, 
                    0.5055313333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.365248`", ",", "0.427802`", ",", "0.758297`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.365248, 0.427802, 0.758297]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.365248, 0.427802, 0.758297], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.823241070679188*^9, 3.823241110263686*^9}, {
  3.8232411646398563`*^9, 3.8232411723855753`*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"05e147ff-ba94-4968-9bea-020b99eb1e56"]
}, Open  ]],

Cell["\<\
In addition to these exemplary dynamics, we want to determine for which pairs \
of in-rate and delay congestion occurs. To this end, we define a function \
which for each DDE solution finds whether the overall number of vehicles on \
the streets continuously rises or not.
We save the results for the considered range of delays and in-rates as a \
csv-file to then plot the phase diagram with python (see the jupyter notebook \
and respective modules for details).\
\>", "Text",
 CellChangeTimes->{{3.82324123168427*^9, 3.8232413349389505`*^9}, {
  3.8232416544884443`*^9, 
  3.8232417484158907`*^9}},ExpressionUUID->"9a27509d-27c6-4d19-95b1-\
5b14557aaba4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Determine", " ", "maximal", " ", "values", " ", "of", " ", "DDE", " ", 
      "solutions", " ", "for", " ", "small", " ", "and", " ", "large", " ", 
      "time", " ", "values"}], ";", " ", 
     RowBox[{
      RowBox[{
      "then", " ", "build", " ", "the", " ", "difference", " ", "of", " ", 
       "these", " ", "two", " ", 
       RowBox[{"maxima", ".", " ", "If"}], " ", "the", " ", "difference", " ",
        "is"}], " ", "\[LessEqual]", "0"}]}], ",", " ", 
    RowBox[{"the", " ", "solution", " ", "is", " ", 
     RowBox[{"stable", ".", " ", "Else"}]}], ",", " ", 
    RowBox[{"it", " ", "is", " ", 
     RowBox[{"unstable", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MaxDiff", "[", 
    RowBox[{
    "\[Nu]IN_", ",", " ", "t_", ",", " ", "\[Tau]_", ",", " ", "tfin_", ",", 
     "df_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fp", ",", "LastTime", ",", " ", "FirstMax", ",", " ", "SecondMax"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Nu]IN", "\[GreaterEqual]", "1.3"}], ",", 
        RowBox[{"fp", "=", "1.5"}], ",", " ", 
        RowBox[{"fp", "=", 
         RowBox[{"findFixedPoint", "[", 
          RowBox[{"N0V", ",", "\[Nu]IN"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LastTime", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"SolsDDE", "[", 
          RowBox[{"\[Nu]IN", ",", 
           RowBox[{"fp", "+", "df"}], ",", " ", 
           RowBox[{"fp", "-", "df"}], ",", " ", "t", ",", " ", "\[Tau]", ",", 
           " ", "tfin"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FirstMax", "=", 
       RowBox[{"FindMaxValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "+", 
              RowBox[{"NC", "[", "t", "]"}]}], ")"}], "/.", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"SolsDDE", "[", 
               RowBox[{"\[Nu]IN", ",", 
                RowBox[{"fp", "+", "df"}], ",", " ", 
                RowBox[{"fp", "-", "df"}], ",", " ", "t", ",", " ", "\[Tau]", 
                ",", " ", "LastTime"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"t", "\[GreaterEqual]", "20"}], " ", "&&", " ", 
            RowBox[{"t", "\[LessEqual]", "40"}]}]}], "}"}], ",", " ", "t"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SecondMax", "=", 
       RowBox[{"FindMaxValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "+", 
              RowBox[{"NC", "[", "t", "]"}]}], ")"}], "/.", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"SolsDDE", "[", 
               RowBox[{"\[Nu]IN", ",", 
                RowBox[{"fp", "+", "df"}], ",", " ", 
                RowBox[{"fp", "-", "df"}], ",", " ", "t", ",", " ", "\[Tau]", 
                ",", " ", "LastTime"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"t", "\[GreaterEqual]", 
             RowBox[{"LastTime", "-", "20"}]}], " ", "&&", " ", 
            RowBox[{"t", "<", 
             RowBox[{"LastTime", "-", "1"}]}]}]}], "}"}], ",", " ", "t"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"SecondMax", "-", "FirstMax"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.823241419363636*^9, 3.8232414848641343`*^9}, {
  3.8232415537959695`*^9, 3.8232415895478926`*^9}, {3.823251879189595*^9, 
  3.8232518857066574`*^9}},ExpressionUUID->"879e0b73-dc2a-4457-a4d4-\
0deea5c378d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"t0", "=", "500"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"StabTable", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MaxDiff", "[", 
      RowBox[{
      "\[Nu]IN", ",", "  ", "t", ",", " ", "\[Tau]", ",", " ", "500", ",", 
       " ", "0.1"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Nu]IN", ",", " ", "1.0", ",", "1.31", ",", "0.01"}], "}"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", " ", "0", ",", "20", ",", "0.5"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<MaxDiffs_N0_10_nuMin_1_0_nuMax_1_31_dNu_0_01_tauMin_0_tauMax_20_dtau_0_\
5_Ninit_fp_pm_0_1_tMax_500.csv\>\"", ",", " ", "StabTable"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.823241609577272*^9, {3.8232416412069893`*^9, 
   3.8232416441263714`*^9}},ExpressionUUID->"ddbeac28-565b-4314-9997-\
c78d422f1f04"]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear stability analysis of the DDE", "Subchapter",
 CellChangeTimes->{{3.8232420786151075`*^9, 
  3.823242085974313*^9}},ExpressionUUID->"e7ac64da-3fee-4780-b3ef-\
d6d93e7cb583"],

Cell["\<\
In addition to the numerical integration of the DDE, we also determine the \
critical in-rates using linear stability analysis. Details on the theory \
behind this ansatz can be found in the article\[CloseCurlyQuote]s Appendix. 

The general idea is to linearize the differential equation around its stable \
fixed point and then for each delay find a critical in-rate with an \
eigenvalue with zero real part.

So again, we formulate our differential equations and from them derive two \
Jacobians.\
\>", "Text",
 CellChangeTimes->{{3.823242205622498*^9, 3.823242207762633*^9}, {
  3.823242253200373*^9, 3.823242365155716*^9}, {3.823242401481607*^9, 
  3.8232425266110983`*^9}},ExpressionUUID->"38b9bbc3-8d85-4b24-8cc4-\
b81c5abbbe78"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8232422113229017`*^9, 3.8232422121096272`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"14d9a72d-ca89-48eb-a7f1-d305486bc2ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Travel", " ", "times"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"t1", "[", " ", 
      RowBox[{"N0_", ",", "N1_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"N1", "/", "N0"}], "]"}], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"N1", "/", "N0"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"t2", "[", 
      RowBox[{"N0_", ",", "N2_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"N2", "/", "N0"}], "]"}], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"N2", "/", "N0"}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823242566060437*^9, 3.8232425706673365`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"2c3ead62-fc76-4bb9-abfc-b678a88378b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Differential", " ", "equations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DGLN1\[Tau]", "[", 
      RowBox[{
      "\[Nu]_", ",", " ", "N1_", ",", " ", "N2_", ",", " ", "N1\[Tau]_", ",", 
       " ", "N2\[Tau]_", ",", " ", "N0_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Nu]", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"t1", "[", 
             RowBox[{"N0", ",", " ", "N1\[Tau]"}], "]"}], "-", 
            RowBox[{"t2", "[", 
             RowBox[{"N0", ",", " ", "N2\[Tau]"}], "]"}]}], "]"}]}], ")"}]}], 
       ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N1", "^", "2"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"N0", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"N1", "/", "N0"}], "]"}], "-", "1"}], ")"}]}], 
        ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DGLN2\[Tau]", "[", 
      RowBox[{
      "\[Nu]_", ",", " ", "N1_", ",", " ", "N2_", ",", "N1\[Tau]_", ",", " ", 
       "N2\[Tau]_", ",", " ", "N0_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Nu]", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"t2", "[", 
             RowBox[{"N0", ",", " ", "N2\[Tau]"}], "]"}], "-", 
            RowBox[{"t1", "[", 
             RowBox[{"N0", ",", " ", "N1\[Tau]"}], "]"}]}], "]"}]}], ")"}]}], 
       ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N2", "^", "2"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"N0", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"N2", "/", "N0"}], "]"}], "-", "1"}], ")"}]}], 
        ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823242573205716*^9, 3.823242581278528*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"115ad2e7-0b7f-4367-882a-e1de143b4556"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Jacobi", " ", "matrices"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"J011r", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN1\[Tau]", "[", 
        RowBox[{
        "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", 
         " ", "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J012r", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN1\[Tau]", "[", 
        RowBox[{
        "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", 
         " ", "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N2"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J021r", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN2\[Tau]", "[", 
        RowBox[{
        "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", 
         " ", "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N1"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J022r", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN2\[Tau]", "[", 
        RowBox[{
        "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", 
         " ", "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N2"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8232425866401744`*^9, 3.8232425940218816`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"71fa1430-3d62-43ef-8826-d4cff139ecd8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"J\[Tau]11r", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"DGLN1\[Tau]", "[", 
      RowBox[{
      "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", " ",
        "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N1\[Tau]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[Tau]12r", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"DGLN1\[Tau]", "[", 
      RowBox[{
      "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", " ",
        "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N2\[Tau]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[Tau]21r", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"DGLN2\[Tau]", "[", 
      RowBox[{
      "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", " ",
        "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N1\[Tau]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[Tau]22r", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"DGLN2\[Tau]", "[", 
      RowBox[{
      "\[Nu]", ",", " ", "N1", ",", " ", "N2", ",", " ", "N1\[Tau]", ",", " ",
        "N2\[Tau]", ",", " ", "N0"}], "]"}], ",", " ", "N2\[Tau]"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"0b183b38-41c8-4e58-85bb-7c19d738feab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Stable", " ", "fixed", " ", "point"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findFixedPoint", "[", 
    RowBox[{"N00_", ",", "\[Nu]0_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"FindRoot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"DGLN1\[Tau]", "[", 
           RowBox[{
           "\[Nu]0", ",", " ", "Nx", ",", " ", "Nx", ",", " ", "Nx", ",", " ",
             "Nx", ",", " ", "N00"}], "]"}], "\[Equal]", "0"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"Nx", ",", "x0"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x0", ",", "0.1", ",", "1.5"}], "}"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8232426016570377`*^9, 3.8232426083025002`*^9}, {
  3.823242748568365*^9, 3.823242750349411*^9}, {3.823243139288637*^9, 
  3.8232431405089636`*^9}, {3.8232434491827183`*^9, 3.823243450524635*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"4b27c2a4-2b5c-456b-b049-a63e86532eb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Characteristic", " ", "equation"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"form1", "[", 
     RowBox[{
     "\[Lambda]_", ",", " ", "\[Tau]_", ",", "N00_", ",", "\[Nu]0_", ",", 
      "fp_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J011r", "+", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Lambda]"}], "*", "\[Tau]"}], "]"}], 
               "J\[Tau]11r"}], "-", "\[Lambda]"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"J022r", "+", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Lambda]"}], "*", "\[Tau]"}], "]"}], "*", 
               "J\[Tau]22r"}], "-", "\[Lambda]"}], ")"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"J021r", "+", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Lambda]"}], "*", "\[Tau]"}], "]"}], "*", 
               "J\[Tau]21r"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"J012r", "+", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "\[Lambda]"}], "*", "\[Tau]"}], "]"}], "*", 
               "J\[Tau]12r"}]}], ")"}]}]}], "/.", 
          RowBox[{"N0", "\[Rule]", "N00"}]}], "/.", 
         RowBox[{"\[Nu]", "\[Rule]", "\[Nu]0"}]}], "/.", 
        RowBox[{"N1", "\[Rule]", "fp"}]}], "/.", 
       RowBox[{"N2", "\[Rule]", "fp"}]}], "/.", 
      RowBox[{"N1\[Tau]", "\[Rule]", "fp"}]}], "/.", 
     RowBox[{"N2\[Tau]", "\[Rule]", "fp"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8232426262675705`*^9, 3.8232426340066495`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"523f85bd-82b4-4ceb-97fb-5842d67412a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "conditions", " ", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "Im"}], "}"}], " ", "for", " ", "the", " ", "root", 
    " ", "search"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testRegion", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0.2"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0.2"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findMaxReEigenvalue", "[", 
     RowBox[{"N00_", ",", "\[Nu]0_", ",", "\[Tau]_", ",", "testRegion_List"}],
      "]"}], ":=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fp", "=", 
        RowBox[{"findFixedPoint", "[", 
         RowBox[{"N00", ",", "\[Nu]0"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fp", "\[GreaterEqual]", "1.3"}], ",", 
         RowBox[{
          RowBox[{"Return", "[", "1", "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Max", "[", 
        RowBox[{"Re", "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{"form1", "[", 
                RowBox[{
                "\[Lambda]", ",", "\[Tau]", ",", "N00", ",", " ", "\[Nu]0", 
                 ",", "fp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Lambda]", ",", 
                 RowBox[{"x", "+", 
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}], "]"}], "+", 
                  RowBox[{"y", "*", "I"}], "+", 
                  RowBox[{
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}], "]"}], "*", 
                   "I"}]}]}], "}"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"testRegion", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"testRegion", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8232427625316477`*^9, 3.8232427734355106`*^9}, {
  3.8232431550455065`*^9, 3.8232431551677485`*^9}, {3.823243469238964*^9, 
  3.8232434698558292`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"0c8c7ef2-95f0-4f56-908f-2b49196a57fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Interval", " ", "halving", " ", "to", " ", "find", " ", "the", " ", 
    "stability", " ", "boundary", " ", "for", " ", "a", " ", "given", " ", 
    "delay", " ", "\[Tau]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"findStabilityBoundaryFixedDelay", "[", 
    RowBox[{"N00_", ",", "\[Tau]_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minInRate", "=", "0.9"}], ",", 
       RowBox[{"maxInRate", "=", "1.4"}], ",", "minReEv", ",", "maxReEv", ",",
        "midReEv"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minReEv", "=", 
       RowBox[{"findMaxReEigenvalue", "[", 
        RowBox[{
        "N00", ",", " ", "minInRate", ",", " ", "\[Tau]", ",", "testRegion"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxReEv", "=", 
       RowBox[{"findMaxReEigenvalue", "[", 
        RowBox[{
        "N00", ",", " ", "maxInRate", ",", " ", "\[Tau]", ",", "testRegion"}],
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"maxInRate", "-", "minInRate"}], ")"}], ">", "0.001"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"minReEv", "<", "0"}], "\[And]", 
            RowBox[{"maxReEv", ">", "0"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"midReEv", "=", 
             RowBox[{"findMaxReEigenvalue", "[", 
              RowBox[{"N00", ",", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", "2"}], 
               ",", " ", "\[Tau]", ",", "testRegion"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"midReEv", "<", "0"}], ",", 
              RowBox[{
               RowBox[{"minInRate", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", 
                 "2"}]}], ";", 
               RowBox[{"minReEv", "=", "midReEv"}], ";"}], ",", 
              RowBox[{
               RowBox[{"maxInRate", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", 
                 "2"}]}], ";", 
               RowBox[{"maxReEv", "=", "midReEv"}], ";"}]}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"maxInRate", "-", "minInRate"}], ")"}], "\[LessEqual]", 
         "0.001"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", "2"}], ",",
             "True"}], "}"}], "]"}], ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"maxInRate", ",", "False"}], "}"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8232426809115157`*^9, {3.8232428369637747`*^9, 3.823242852033504*^9}, {
   3.8232429000702157`*^9, 3.8232429083938165`*^9}, {3.8232430092463717`*^9, 
   3.8232430163374805`*^9}, {3.8232431058232603`*^9, 
   3.8232431074811487`*^9}, {3.8232433011422863`*^9, 
   3.8232433064536743`*^9}, {3.8232434812741733`*^9, 3.823243484442918*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"45545fae-af21-431a-932f-d5be0f0c3c56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stabilityBoundaryfixedDelay", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"findStabilityBoundaryFixedDelay", "[", 
        RowBox[{"1", ",", "\[Tau]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "20", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{3.823242916900707*^9},
 CellLabel->"In[37]:=",ExpressionUUID->"a1de7ebf-78c9-4ecc-b9d3-79e7b0c8d2e8"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,37,17,33118853357370816595,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8232429483840256`*^9, 3.823243018956217*^9, 
  3.823243162585041*^9, 3.823243308859459*^9, 3.8232434922422085`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"176e4755-77df-4028-baab-eb6ee3ec083a"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,37,18,33118853357370816595,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8232429483840256`*^9, 3.823243018956217*^9, 
  3.823243162585041*^9, 3.823243308859459*^9, 3.8232434922955494`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"e515b981-22d5-4011-a878-a2d99287403d"],

Cell[BoxData[
 TemplateBox[{
  "FindRoot","lstol",
   "\"The line search decreased the step size to within tolerance specified \
by AccuracyGoal and PrecisionGoal but was unable to find a sufficient \
decrease in the merit function. You may need more than \
\\!\\(\\*RowBox[{\\\"MachinePrecision\\\"}]\\) digits of working precision to \
meet these tolerances.\"",2,37,19,33118853357370816595,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8232429483840256`*^9, 3.823243018956217*^9, 
  3.823243162585041*^9, 3.823243308859459*^9, 3.8232434930131598`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"82046a80-112e-48dd-80e1-2e085180e6bf"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"FindRoot\\\", \
\\\"::\\\", \\\"lstol\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,37,20,33118853357370816595,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8232429483840256`*^9, 3.823243018956217*^9, 
  3.823243162585041*^9, 3.823243308859459*^9, 3.823243493044403*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"7a42ebce-b80e-4e06-bf49-58145485e984"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\[Infinity]"}], 
        "]"}]}], "}"}], "&"}], "/@", "stabilityBoundaryfixedDelay"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<delay \[Tau]\>\"", ",", 
      "\"\<In-rate \!\(\*SubscriptBox[\(\[Nu]\), \(in\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8232429973103065`*^9, 3.823243001792252*^9}, {
  3.8232430732940044`*^9, 3.8232430736254625`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"947d03db-d161-420b-ba61-03de66a159e3"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQNpIODyxR7C+2CPymdwQOVzQPgRn6F8AQi/5BOU
LwLh3/gI5UtA+DkwvgyELwPjK0D4Dz5A+UoQ/hYYXwXCnwDjq0Htg/E1IPwY
GF8LwveB8XUgfBsYXw/CN4DxDSB8FRjfEOo+GN8IwheB8Y0hfB4Y3wTC5/hg
DwAwxlQV
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.002},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"In-rate \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \\(in\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox["\"delay \[Tau]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {1., 1.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8232430028778987`*^9, 3.823243074164842*^9, 
  3.823243194362939*^9, 3.8232433481477785`*^9, 3.823243518331524*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"52db355d-1aab-4cf6-bc4b-b16e0604c23d"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nuVals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"stabilityBoundaryfixedDelay", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "1", ",", "21", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauVals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"stabilityBoundaryfixedDelay", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "1", ",", "21", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<stabBoundary_tauVals_N0_1.csv\>\"", ",", "tauVals"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<stabBoundary_nuVals_N0_1.csv\>\"", ",", " ", "nuVals"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.823252902800597*^9, 3.8232529385973344`*^9}, {
  3.82325299447662*^9, 
  3.823252996123444*^9}},ExpressionUUID->"672d5e21-491e-47ef-a150-\
8c352b0e4d1a"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Figure 3: Providing averaged information", "Chapter",
 CellChangeTimes->{{3.823243566505516*^9, 
  3.8232435799231443`*^9}},ExpressionUUID->"cf8c3f92-c61f-411d-a8de-\
ed00cf3bc3b5"],

Cell[CellGroupData[{

Cell["Introducing an averaging time window in the DDE ", "Subchapter",
 CellChangeTimes->{{3.823243610030038*^9, 
  3.8232436219749856`*^9}},ExpressionUUID->"88f148a1-641c-492d-88b6-\
92023ca9f54b"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.823243627029011*^9, 3.8232436281158295`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"aef2da6d-b0c4-4e41-bb4c-98195d605316"],

Cell["\<\
In Fig.3, we study the effect of information averaging on the overall \
systemic stability. For this we introduce two new differential equations for \
the dynamics of averaged street loads. Other than that, the approach is the \
same as for \[OpenCurlyDoubleQuote]basic\[CloseCurlyDoubleQuote] \
delay-differential equations. \
\>", "Text",
 CellChangeTimes->{{3.823251509318878*^9, 3.8232515449240284`*^9}, {
  3.8232517433649035`*^9, 
  3.8232518045539265`*^9}},ExpressionUUID->"0ec923d0-dddb-4292-b7dc-\
6bb43d4ca13e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0A", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0C", "=", "1"}], ";"}]}], "Input",ExpressionUUID->"f54f7c3b-bbe3-\
4a61-9bb4-3c67be0e219a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Travel", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tA", "[", 
     RowBox[{"t0A_", ",", " ", "N0_", ",", "NAav_"}], "]"}], ":=", 
    RowBox[{"t0A", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{"NAav", "/", "N0"}], ")"}], "]"}], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"(", 
        RowBox[{"NAav", "/", "N0"}], ")"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tC", "[", 
     RowBox[{"t0C_", ",", "N0_", ",", "NCav_"}], "]"}], ":=", 
    RowBox[{"t0C", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{"NCav", "/", "N0"}], ")"}], "]"}], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"(", 
        RowBox[{"NCav", "/", "N0"}], ")"}], ")"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8232519333027787`*^9, 
  3.8232519525989065`*^9}},ExpressionUUID->"73b29d35-8e7b-4bd8-974c-\
f3117eed7f8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"In", "-", "Rates"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rINA", "[", 
      RowBox[{
      "\[Beta]_", ",", "N0_", ",", " ", "t0A_", ",", " ", "t0C_", ",", " ", 
       "NAav_", ",", " ", "NCav_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[Beta]", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"t0A", ",", "N0", ",", " ", "NAav"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"t0C", ",", "N0", ",", "NCav"}], "]"}]}], ")"}]}], 
         "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rINC", "[", 
      RowBox[{
      "\[Beta]_", ",", " ", "N0_", ",", " ", "t0A_", ",", " ", "t0C_", ",", 
       " ", "NAav_", ",", " ", "NCav_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"t0A", ",", "N0", ",", " ", "NAav"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"t0C", ",", "N0", ",", "NCav"}], "]"}]}], ")"}]}], 
         "]"}]}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8232519563108053`*^9, 
  3.8232519618733835`*^9}},ExpressionUUID->"66f1c32f-e95d-482c-b336-\
7a50083ba6d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Differential", " ", "equations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NAEqns", "[", 
      RowBox[{
      "\[Nu]IN_", ",", " ", "NAinit_", ",", "NAav_", ",", "NCav_", ",", " ", 
       "t_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"NA", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"\[Nu]IN", "*", 
          RowBox[{"rINA", "[", 
           RowBox[{
           "\[Beta]V", ",", " ", "N0V", ",", " ", "t0A", ",", " ", "t0C", ",",
             " ", "NAav", ",", " ", "NCav"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "^", "2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"t0A", "*", "N0V"}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "/", "N0V"}], "]"}], "-", "1"}], 
           ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"NA", "[", 
         RowBox[{"t", "/;", 
          RowBox[{"t", "\[LessEqual]", "0"}]}], "]"}], "\[Equal]", 
        "NAinit"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NCEqns", "[", 
      RowBox[{
      "\[Nu]IN_", ",", " ", "NCinit_", ",", "NAav_", ",", "NCav_", ",", " ", 
       "t_"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"NC", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", " ", 
        RowBox[{
         RowBox[{"\[Nu]IN", " ", "*", 
          RowBox[{"rINC", "[", 
           RowBox[{
           "\[Beta]V", ",", " ", "N0V", ",", " ", "t0A", ",", " ", "t0C", ",",
             " ", "NAav", ",", " ", "NCav"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NC", "[", "t", "]"}], "^", "2"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"t0C", "*", "N0V"}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"NC", "[", "t", "]"}], "/", "N0V"}], "]"}], "-", "1"}], 
           ")"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"NC", "[", 
         RowBox[{"t", "/;", 
          RowBox[{"t", "\[LessEqual]", "0"}]}], "]"}], "\[Equal]", 
        "NCinit"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NAavEqns", "[", 
      RowBox[{
      "NA_", ",", "NAinit_", ",", "Tav_", ",", " ", "\[Tau]_", ",", "t_"}], 
      "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"NAav", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "Tav"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"NA", "[", 
            RowBox[{"t", "-", "\[Tau]"}], "]"}], "-", 
           RowBox[{"NA", "[", 
            RowBox[{"t", "-", "\[Tau]", "-", "Tav"}], "]"}]}], ")"}]}]}], ",",
        "  ", 
       RowBox[{
        RowBox[{"NAav", "[", 
         RowBox[{"t", "/;", 
          RowBox[{"t", "\[LessEqual]", "0"}]}], "]"}], "\[Equal]", 
        "NAinit"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NCavEqns", "[", 
      RowBox[{
      "NC_", ",", "NCinit_", ",", "Tav_", ",", " ", "\[Tau]_", ",", "t_"}], 
      "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"NCav", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "Tav"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"NC", "[", 
            RowBox[{"t", "-", "\[Tau]"}], "]"}], "-", 
           RowBox[{"NC", "[", 
            RowBox[{"t", "-", "\[Tau]", "-", "Tav"}], "]"}]}], ")"}]}]}], ",",
        "  ", 
       RowBox[{
        RowBox[{"NCav", "[", 
         RowBox[{"t", "/;", 
          RowBox[{"t", "\[LessEqual]", "0"}]}], "]"}], "\[Equal]", 
        "NCinit"}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823251964338064*^9, 
  3.823251974863513*^9}},ExpressionUUID->"2bc72741-b1bb-4a76-bb6a-\
bc53fd33e7ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Determine", " ", "the", " ", "stable", " ", "fixed", " ", "point"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DGLN1\[Tau]", "[", 
      RowBox[{
      "\[Nu]_", ",", "N1_", ",", "N2_", ",", "N1\[Tau]_", ",", "N2\[Tau]_", 
       ",", "N0_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Nu]", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"1", ",", "N0", ",", "N1\[Tau]"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"1", ",", "N0", ",", "N2\[Tau]"}], "]"}]}], "]"}]}], 
         ")"}]}], ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"N1", "^", "2"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"N0", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{"N1", "/", "N0"}], "]"}], "-", "1"}], ")"}]}], 
        ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findFixedPoint", "[", 
     RowBox[{"N00_", ",", "\[Nu]0_"}], "]"}], ":=", 
    RowBox[{"Min", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"DGLN1\[Tau]", "[", 
            RowBox[{
            "\[Nu]0", ",", "Nx", ",", "Nx", ",", "Nx", ",", "Nx", ",", 
             "N00"}], "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"{", 
           RowBox[{"Nx", ",", "x0"}], "}"}]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "0.01", ",", "2"}], "}"}]}], "]"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8232519855911007`*^9, 
  3.823252000837363*^9}},ExpressionUUID->"a7861dfa-ad04-4e17-9666-\
4bc9eac2c1d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Solve", " ", "the", " ", "system", " ", "of", " ", "equations", " ", "by",
     " ", "numerical", " ", "integration"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SolsDDEAv", "[", 
     RowBox[{
     "\[Nu]IN_", ",", " ", "NAinit_", ",", " ", "NCinit_", ",", " ", "t_", 
      ",", " ", "\[Tau]_", ",", " ", "tfin_", ",", "Tav_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NDSolve", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NAEqns", "[", 
             RowBox[{"\[Nu]IN", ",", " ", "NAinit", ",", 
              RowBox[{"NAav", "[", "t", "]"}], ",", " ", 
              RowBox[{"NCav", "[", "t", "]"}], ",", " ", "t"}], "]"}], ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"NCEqns", "[", 
             RowBox[{"\[Nu]IN", ",", " ", "NCinit", ",", 
              RowBox[{"NAav", "[", "t", "]"}], ",", " ", 
              RowBox[{"NCav", "[", "t", "]"}], ",", " ", "t"}], "]"}], ",", 
            " ", "\[IndentingNewLine]", 
            RowBox[{"NAavEqns", "[", 
             RowBox[{
             "NA", ",", "NAinit", ",", " ", "Tav", ",", " ", "\[Tau]", ",", 
              " ", "t"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"NCavEqns", "[", 
             RowBox[{
             "NC", ",", " ", "NCinit", ",", " ", "Tav", ",", " ", "\[Tau]", 
              ",", " ", "t"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"WhenEvent", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"NA", "[", "t", "]"}], "+", 
                  RowBox[{"NC", "[", "t", "]"}]}], "==", "100"}], ",", " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Set", "[", 
                   RowBox[{"t0", ",", "t"}], "]"}], ",", " ", 
                  "\"\<StopIntegration\>\""}], "}"}]}], "]"}], ",", " ", 
              RowBox[{"WhenEvent", "[", 
               RowBox[{
                RowBox[{"t", "\[Equal]", 
                 RowBox[{"tfin", "-", "1"}]}], ",", " ", 
                RowBox[{"Set", "[", 
                 RowBox[{"t0", ",", "tfin"}], "]"}]}], "]"}]}], "}"}]}], 
           "}"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NA", "[", "t", "]"}], ",", " ", 
           RowBox[{"NC", "[", "t", "]"}]}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"t", ",", " ", "0", ",", "tfin"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", "t0"}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.823251908037053*^9, 3.8232519099088717`*^9}, {
  3.8232520068404727`*^9, 
  3.823252019021249*^9}},ExpressionUUID->"fa1bb789-912f-49b7-960d-\
59a121881d53"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "whether", " ", "the", " ", "system", " ", "congests", " ", 
    "by", " ", "calculating", " ", "the", " ", "change", " ", "in", " ", 
    "the", " ", "maximal", " ", "street", " ", "loads", " ", "from", " ", 
    "the", " ", "beginning", " ", "to", " ", "the", " ", "end", " ", "of", 
    " ", "simulations"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"MaxDiff", "[", 
    RowBox[{
    "\[Nu]IN_", ",", " ", "t_", ",", " ", "\[Tau]_", ",", " ", "tfin_", ",", 
     "Tav_", ",", "df_"}], "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fp", ",", "NAinit", ",", " ", "NCinit", ",", " ", "LastTime", ",", " ",
        "FirstMax", ",", " ", "SecondMax"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Nu]IN", "\[GreaterEqual]", "1.3"}], ",", 
        RowBox[{"fp", "=", "1.5"}], ",", " ", 
        RowBox[{"fp", "=", 
         RowBox[{"findFixedPoint", "[", 
          RowBox[{"N0V", ",", "\[Nu]IN"}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NAinit", "=", 
       RowBox[{"fp", "+", "df"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"NCinit", "=", 
       RowBox[{"fp", "-", "df"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LastTime", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Evaluate", "[", 
          RowBox[{"SolsDDEAv", "[", 
           RowBox[{
           "\[Nu]IN", ",", " ", "NAinit", ",", " ", "NCinit", ",", " ", "t", 
            ",", "\[Tau]", ",", " ", "tfin", ",", " ", "Tav"}], "]"}], "]"}], 
         "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "2"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"FirstMax", "=", 
       RowBox[{"FindMaxValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "+", 
              RowBox[{"NC", "[", "t", "]"}]}], ")"}], "/.", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"SolsDDEAv", "[", 
               RowBox[{
               "\[Nu]IN", ",", "NAinit", ",", "NCinit", ",", " ", "t", ",", 
                " ", "\[Tau]", ",", "LastTime", ",", "Tav"}], "]"}], "]"}], 
             "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"t", "\[GreaterEqual]", "20"}], " ", "&&", " ", 
            RowBox[{"t", "\[LessEqual]", "40"}]}]}], "}"}], ",", " ", "t"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SecondMax", "=", 
       RowBox[{"FindMaxValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"NA", "[", "t", "]"}], "+", 
              RowBox[{"NC", "[", "t", "]"}]}], ")"}], "/.", 
            RowBox[{
             RowBox[{"Evaluate", "[", 
              RowBox[{"SolsDDEAv", "[", 
               RowBox[{
               "\[Nu]IN", ",", "  ", "NAinit", ",", "NCinit", ",", " ", "t", 
                ",", " ", "\[Tau]", ",", " ", "tfin", ",", "Tav"}], "]"}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"t", "\[GreaterEqual]", 
             RowBox[{"LastTime", "-", "20"}]}], " ", "&&", " ", 
            RowBox[{"t", "<", "LastTime"}]}]}], "}"}], ",", " ", "t"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"Return", "[", 
       RowBox[{"SecondMax", "-", "FirstMax"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.823251916308097*^9, 3.8232519271542253`*^9}, {
  3.823252022375211*^9, 
  3.823252064841126*^9}},ExpressionUUID->"fce93696-ad3e-452d-a72a-\
f356505adeb2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Determine", " ", "the", " ", "stability", " ", "for", " ", "all", " ", 
     "considered", " ", "pairs", " ", "of", " ", "in"}], "-", 
    RowBox[{"rate", " ", "and", " ", "delay"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"t0", "=", "500"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tav0", "=", "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BoundT50", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MaxDiff", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "t", ",", "\[Tau]", ",", " ", "t0", ",", " ", 
         "Tav0", ",", "0.1"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]IN", ",", " ", "1.0", ",", "1.31", ",", "0.01"}], "}"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Tau]", ",", " ", "0", ",", "20", ",", "0.5"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<AvMaxDiffs_T50_N0_1_nuMin_1_nuMax_1_31_dNu_0_01_tauMin_0_tauMax_20_\
dtau_0_5_Ninit_fp_pm_0_1_tMax_500.csv\>\"", ",", " ", "BoundT50"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823252105125365*^9, 3.823252128430361*^9}, {
  3.823252201690268*^9, 3.823252217902961*^9}, {3.823252286535209*^9, 
  3.823252306745391*^9}, {3.8232548726508303`*^9, 
  3.8232549102897663`*^9}},ExpressionUUID->"002f5bf7-bff4-4d67-844a-\
f9a17db86418"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Find", " ", "the", " ", "stability", " ", "for", " ", "constant", " ", 
     "delay", " ", "and", " ", "various", " ", "pairs", " ", "of", " ", 
     "in"}], "-", 
    RowBox[{
    "rate", " ", "and", " ", "averaging", " ", "time", " ", "window"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Bound\[Tau]1", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MaxDiff", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "t", ",", "1", ",", " ", "500", ",", " ", "T", 
         ",", "0.1"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]IN", ",", "1.0", ",", "1.3", ",", "0.001"}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", " ", "1", ",", " ", "50", ",", " ", "1"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bound\[Tau]5", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MaxDiff", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "t", ",", "5", ",", " ", "500", ",", " ", "T", 
         ",", "0.1"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]IN", ",", "1.0", ",", "1.3", ",", "0.001"}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", " ", "1", ",", " ", "50", ",", " ", "1"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Bound\[Tau]10", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"MaxDiff", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "t", ",", "10", ",", " ", "500", ",", " ", "T", 
         ",", "0.1"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Nu]IN", ",", "1.0", ",", "1.3", ",", "0.001"}], "}"}], ",",
        " ", 
       RowBox[{"{", 
        RowBox[{"T", ",", " ", "1", ",", " ", "50", ",", " ", "1"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<MaxDiff_tau_1_T_1_to_50_dT_1_nuIn_1_0_to_1_3_dnu_0_001.csv\>\"", 
      ",", " ", "Bound\[Tau]1"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<MaxDiff_tau_5_T_1_to_50_dT_1_nuIn_1_0_to_1_3_dnu_0_001.csv\>\"", 
      ",", " ", "Bound\[Tau]5"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<MaxDiff_tau_10_T_1_to_50_dT_1_nuIn_1_0_to_1_3_dnu_0_001.csv\>\"", 
      ",", " ", "Bound\[Tau]10"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8232548141677628`*^9, 3.823254868303263*^9}, {
  3.8232549159568768`*^9, 
  3.823254954433799*^9}},ExpressionUUID->"eb424db4-bec2-4103-bc54-\
5a3446c75882"]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear stability analysis with averaging", "Subchapter",
 CellChangeTimes->{{3.8232523532676086`*^9, 
  3.823252360358677*^9}},ExpressionUUID->"88e3178c-efb8-47d0-85d5-\
3447aae7b20d"],

Cell["\<\
Also when providing averaged information we can predict changes in stability \
of the first fixed point by using linear stability analysis. See the Appendix \
of the article for details on the method. \
\>", "Text",
 CellChangeTimes->{{3.823252400693267*^9, 
  3.8232524665233927`*^9}},ExpressionUUID->"990b7e4d-43f9-4663-a9b2-\
54bf17db493f"],

Cell[BoxData[
 RowBox[{"Quit", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8232524684271564`*^9, 3.8232524691818542`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ab77eb47-be9e-4499-b69d-0d172b1eb5c7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"N0V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]V", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0A", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0C", "=", "1"}], ";"}]}], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"42d2b112-318e-45b7-9786-48800441d368"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Travel", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tA", "[", 
     RowBox[{"t0A_", ",", " ", "N0_", ",", "N1av_"}], "]"}], ":=", 
    RowBox[{"t0A", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{"N1av", "/", "N0"}], ")"}], "]"}], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"(", 
        RowBox[{"N1av", "/", "N0"}], ")"}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tC", "[", 
     RowBox[{"t0C_", ",", "N0_", ",", "N2av_"}], "]"}], ":=", 
    RowBox[{"t0C", "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"(", 
          RowBox[{"N2av", "/", "N0"}], ")"}], "]"}], "-", "1"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"(", 
        RowBox[{"N2av", "/", "N0"}], ")"}], ")"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8232550866428127`*^9, 
  3.8232550914472632`*^9}},ExpressionUUID->"992a8806-47a3-4161-af41-\
19c01048be0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"In", "-", "rates"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"rINA", "[", 
      RowBox[{
      "\[Beta]_", ",", "N0_", ",", " ", "t0A_", ",", " ", "t0C_", ",", " ", 
       "N1av_", ",", " ", "N2av_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[Beta]", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"t0A", ",", "N0", ",", " ", "N1av"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"t0C", ",", "N0", ",", "N2av"}], "]"}]}], ")"}]}], 
         "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rINC", "[", 
      RowBox[{
      "\[Beta]_", ",", " ", "N0_", ",", " ", "t0A_", ",", " ", "t0C_", ",", 
       " ", "N1av_", ",", " ", "N2av_"}], "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "\[Beta]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tA", "[", 
             RowBox[{"t0A", ",", "N0", ",", " ", "N1av"}], "]"}], "-", 
            RowBox[{"tC", "[", 
             RowBox[{"t0C", ",", "N0", ",", "N2av"}], "]"}]}], ")"}]}], 
         "]"}]}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.823255094363141*^9, 
  3.8232550997240267`*^9}},ExpressionUUID->"f91c2a0d-dbb9-49e3-a191-\
8627e7ccdd12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Set", " ", "of", " ", "differential", " ", "equations"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DGLN1", "[", 
      RowBox[{
      "\[Nu]IN_", ",", "N1av_", ",", "N2av_", ",", " ", "N1_", ",", " ", 
       "N2_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"\[Nu]IN", "*", 
       RowBox[{"rINA", "[", 
        RowBox[{
        "\[Beta]V", ",", " ", "N0V", ",", " ", "t0A", ",", " ", "t0C", ",", 
         " ", "N1av", ",", " ", "N2av"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N1", "^", "2"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"t0A", "*", "N0V"}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"N1", "/", "N0V"}], "]"}], "-", "1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DGLN2", "[", 
      RowBox[{
      "\[Nu]IN_", ",", " ", "N1av_", ",", "N2av_", ",", " ", "N1_", ",", " ", 
       "N2_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"\[Nu]IN", " ", "*", 
       RowBox[{"rINC", "[", 
        RowBox[{
        "\[Beta]V", ",", " ", "N0V", ",", " ", "t0A", ",", " ", "t0C", ",", 
         " ", "N1av", ",", " ", "N2av"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"N2", "^", "2"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"t0C", "*", "N0V"}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"N2", "/", "N0V"}], "]"}], "-", "1"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DGLN1av", "[", 
      RowBox[{"T_", ",", "N1\[Tau]_", ",", "N1\[Tau]T_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "T"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"N1\[Tau]", "-", "N1\[Tau]T"}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DGLN2av", "[", 
      RowBox[{"T_", ",", "N2\[Tau]_", ",", "N2\[Tau]T_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "T"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"N2\[Tau]", "-", "N2\[Tau]T"}], ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8232551025500546`*^9, 
  3.8232551097584543`*^9}},ExpressionUUID->"a9da7f93-35ab-42f2-9b54-\
46a9b0a16f36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "matrix", " ", "which", " ", "is", " ", "the", " ", "sum", " ", "of", " ", 
    "the", " ", "Jacobians", " ", 
    RowBox[{"(", 
     RowBox[{
     "with", " ", "the", " ", "exponential", " ", "factors", " ", "and", " ", 
      "minus", " ", "the", " ", "eigenvalues"}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"M11", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"DGLN1", "[", 
         RowBox[{
         "\[Nu]IN", ",", " ", "N1av", ",", " ", "N2av", ",", " ", "N1", ",", 
          " ", "N2"}], "]"}], ",", " ", "N1"}], "]"}], "-", "\[Lambda]0"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M12", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M13", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN1", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "N1av", ",", " ", "N2av", ",", " ", "N1", ",", 
         " ", "N2"}], "]"}], ",", " ", "N1av"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M14", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN1", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "N1av", ",", " ", "N2av", ",", " ", "N1", ",", 
         " ", "N2"}], "]"}], ",", " ", "N2av"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M21", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M22", "=", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"DGLN2", "[", 
         RowBox[{
         "\[Nu]IN", ",", " ", "N1av", ",", " ", "N2av", ",", " ", "N1", ",", 
          " ", "N2"}], "]"}], ",", " ", "N2"}], "]"}], "-", "\[Lambda]0"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M23", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN2", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "N1av", ",", " ", "N2av", ",", " ", "N1", ",", 
         " ", "N2"}], "]"}], ",", " ", "N1av"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M24", "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"DGLN2", "[", 
        RowBox[{
        "\[Nu]IN", ",", " ", "N1av", ",", " ", "N2av", ",", " ", "N1", ",", 
         " ", "N2"}], "]"}], ",", " ", "N2av"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M31", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "T0"}], ")"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Lambda]0"}], " ", "\[Tau]0"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "\[Lambda]0"}], " ", "T0"}], "]"}]}], ")"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M32", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M33", "=", 
     RowBox[{"-", "\[Lambda]0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M34", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M41", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M42", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", "T0"}], ")"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[Lambda]0"}], " ", "\[Tau]0"}], "]"}], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "\[Lambda]0"}], " ", "T0"}], "]"}]}], ")"}]}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M43", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"M44", "=", 
     RowBox[{"-", "\[Lambda]"}]}], ";"}]}]}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"06997675-472d-425c-a74d-9d0f61c8b186"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Determinant", " ", "in", " ", "the", " ", "characteristic", " ", 
    "equation"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DetM", "[", 
    RowBox[{
    "\[Lambda]_", ",", " ", "\[Tau]_", ",", "T_", ",", " ", "\[Nu]0_", ",", 
     " ", "fp_"}], "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Det", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    "M11", ",", " ", "M12", ",", " ", "M13", ",", " ", 
                    "M14"}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    "M21", ",", " ", "M22", ",", " ", "M23", ",", " ", 
                    "M24"}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    "M31", ",", " ", "M32", ",", " ", "M33", ",", " ", 
                    "M34"}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    "M41", ",", " ", "M42", ",", " ", "M43", ",", " ", 
                    "M44"}], "}"}]}], "}"}], "]"}], "/.", 
                RowBox[{"\[Nu]IN", "\[Rule]", "\[Nu]0"}]}], "/.", 
               RowBox[{"T0", "\[Rule]", "T"}]}], "/.", 
              RowBox[{"\[Tau]0", "->", "\[Tau]"}]}], "/.", 
             RowBox[{"\[Lambda]0", "\[Rule]", "\[Lambda]"}]}], "/.", 
            RowBox[{"N1", "\[Rule]", "fp"}]}], "/.", 
           RowBox[{"N2", "\[Rule]", "fp"}]}], "/.", 
          RowBox[{"N1av", "\[Rule]", "fp"}]}], "/.", 
         RowBox[{"N2av", "\[Rule]", "fp"}]}], "/.", 
        RowBox[{"N1\[Tau]", "\[Rule]", "fp"}]}], "/.", 
       RowBox[{"N2\[Tau]", "\[Rule]", "fp"}]}], "/.", 
      RowBox[{"N1\[Tau]T", "\[Rule]", "fp"}]}], "/.", 
     RowBox[{"N2\[Tau]T", "\[Rule]", "fp"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8232551368778133`*^9, 
  3.8232551601913157`*^9}},ExpressionUUID->"d4db8873-b272-4fd3-8c63-\
09c2091b948a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findFixedPoint", "[", "\[Nu]0_", "]"}], ":=", 
  RowBox[{"Min", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"DGLN1", "[", 
          RowBox[{"\[Nu]0", ",", "Nx", ",", "Nx", ",", "Nx", ",", "Nx"}], 
          "]"}], "\[Equal]", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"Nx", ",", "x0"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x0", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[30]:=",ExpressionUUID->"a2b253b7-c22e-475e-8c25-9d0a33026df0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Initial", " ", "conditions", " ", 
    RowBox[{"{", 
     RowBox[{"Re", ",", "Im"}], "}"}], " ", "for", " ", "the", " ", "root", 
    " ", "search"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"testRegion", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0.2"}], "]"}], ",", 
       RowBox[{"Range", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0.2"}], "]"}]}], "}"}]}], ";"}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"findMaxReEigenvalue", "[", 
     RowBox[{"\[Nu]0_", ",", "\[Tau]_", ",", "T_", ",", "testRegion_List"}], 
     "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fp", "=", 
        RowBox[{"findFixedPoint", "[", "\[Nu]0", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"fp", "\[GreaterEqual]", "1.5"}], ",", 
         RowBox[{
          RowBox[{"Return", "[", "1", "]"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Max", "[", 
        RowBox[{"Re", "/@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{"DetM", "[", 
                RowBox[{
                "\[Lambda]", ",", "\[Tau]", ",", "T", ",", "\[Nu]0", ",", 
                 "fp"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Lambda]", ",", 
                 RowBox[{"x", "+", 
                  RowBox[{"RandomReal", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}], "]"}], "+", 
                  RowBox[{"y", "*", "I"}], "+", 
                  RowBox[{
                   RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}], "]"}], "*", 
                   "I"}]}]}], "}"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"testRegion", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"testRegion", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "]"}]}], 
        "]"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8232527629712567`*^9, 
  3.823252781053759*^9}},ExpressionUUID->"56d46c17-5a9a-4823-ba26-\
141176038604"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Interval", " ", "halving", " ", "for", " ", "finding", " ", "the", " ", 
    "stability", " ", "boundary", " ", "for", " ", "a", " ", "given", " ", 
    "delay", " ", "\[Tau]"}], "*)"}], 
  RowBox[{
   RowBox[{"findStabilityBoundaryFixedDelay", "[", 
    RowBox[{"\[Tau]_", ",", " ", "T_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minInRate", "=", "0.9"}], ",", 
       RowBox[{"maxInRate", "=", "1.4"}], ",", "minReEv", ",", "maxReEv", ",",
        "midReEv"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"minReEv", "=", 
       RowBox[{"findMaxReEigenvalue", "[", 
        RowBox[{"minInRate", ",", "\[Tau]", ",", "T", ",", "testRegion"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxReEv", "=", 
       RowBox[{"findMaxReEigenvalue", "[", 
        RowBox[{"maxInRate", ",", "\[Tau]", ",", "T", ",", "testRegion"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"maxInRate", "-", "minInRate"}], ")"}], ">", "0.001"}], ",", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"minReEv", "<", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{"-", "6"}], ")"}]}]}], "\[And]", 
            RowBox[{"maxReEv", ">", "0"}]}], ",", 
           RowBox[{
            RowBox[{"midReEv", "=", 
             RowBox[{"findMaxReEigenvalue", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", "2"}], 
               ",", "\[Tau]", ",", "T", ",", "testRegion"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"midReEv", "<", 
               RowBox[{"10", "^", 
                RowBox[{"(", 
                 RowBox[{"-", "6"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{"minInRate", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", 
                 "2"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"minReEv", "=", "midReEv"}], ";"}], ",", 
              RowBox[{
               RowBox[{"maxInRate", "=", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", 
                 "2"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"maxReEv", "=", "midReEv"}], ";"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"maxInRate", "-", "minInRate"}], ")"}], "\[LessEqual]", 
         "0.001"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"minInRate", "+", "maxInRate"}], ")"}], "/", "2"}], ",",
             "True"}], "}"}], "]"}], ";"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"maxInRate", ",", "False"}], "}"}], "]"}], ";"}]}], "]"}], 
      ";"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8232526436041574`*^9, 3.8232526755911255`*^9}, {
  3.823252740123495*^9, 3.823252759812826*^9}, {3.8232543081026344`*^9, 
  3.8232543085783405`*^9}},ExpressionUUID->"fb14f7c5-ad85-4afa-90c1-\
0c372e100424"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Tav0", "=", "50"}], ";"}]], "Input",
 CellChangeTimes->{{3.8232526037143774`*^9, 3.8232526072096386`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"4d87ded2-3193-4bc1-a734-55a3dff2e569"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stabilityBoundaryAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", 
       RowBox[{"findStabilityBoundaryFixedDelay", "[", 
        RowBox[{"\[Tau]", ",", " ", "Tav0"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]", ",", "0", ",", "20", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8232525808224115`*^9, 3.8232526153733163`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"5ce2a898-69a5-4aa7-ba1e-818bdb447fe3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"#", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", "\[Infinity]"}], 
        "]"}]}], "}"}], "&"}], "/@", "stabilityBoundaryAv"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "1.4"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<delay \[Tau]\>\"", ",", 
      "\"\<In-rate \!\(\*SubscriptBox[\(\[Nu]\), \(in\)]\)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8232550595040655`*^9, 3.823255059804808*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"18b48d69-2b8f-4384-8d36-a049cfd70f33"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw1za0NwlAAxPGXqkoEJIgKIA0hhDRQ8K8zoFEEamsZgQEYoRKJYAgEggE6
QguIyn78311yufzUTY/Z/uwZY0Ztu1XSLuXPotL2fssm6X2XfXyVB/gkD3Ei
j3EgB7j+Ok/wR57hhxzimzzHF3mBD/LS/csrHMoR9uU1/lfOG1zIMX7JW/yU
dzivbAOZ/Fkl
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.002},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"In-rate \\!\\(\\*SubscriptBox[\\(\[Nu]\\), \\(in\\)]\\)\"", 
      TraditionalForm], None}, {
     FormBox["\"delay \[Tau]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {1., 1.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.823255231774937*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"ecdf0e60-d858-4482-9742-855123b1ecc9"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nuVals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"stabilityBoundaryAv", "[", 
        RowBox[{"[", "n", "]"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "1", ",", "21", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauVals", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"stabilityBoundaryAv", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"n", ",", " ", "1", ",", "21", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<stabBoundary_av_tauVals_N0_1.csv\>\"", ",", "tauVals"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<stabBoundary_av_nuVals_N0_1.csv\>\"", ",", " ", "nuVals"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8232529633091774`*^9, 3.8232529852221003`*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"e0b34617-ac3e-42b0-8998-ed7c6f4035dc"]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 1108},
WindowMargins->{{Automatic, 445}, {Automatic, 47}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 375, 8, 216, "Title",ExpressionUUID->"3ab84d70-09e3-4cd5-936e-7bd5c0dd6ec3"],
Cell[CellGroupData[{
Cell[980, 34, 219, 6, 159, "Chapter",ExpressionUUID->"93ac14aa-6357-4b0b-999c-4550ae7f3149"],
Cell[CellGroupData[{
Cell[1224, 44, 221, 5, 64, "Subchapter",ExpressionUUID->"d8fb0f20-aa81-43e7-b1e6-33cccd8b3f15"],
Cell[1448, 51, 594, 11, 100, "Text",ExpressionUUID->"cf9ceeac-b449-43d4-b0c1-9ccb09e84d4b"],
Cell[2045, 64, 175, 4, 45, "Input",ExpressionUUID->"2760af2d-5ba0-4679-9b40-00b3c8575baf"],
Cell[2223, 70, 556, 14, 105, "Input",ExpressionUUID->"93abc3dc-bfe3-4c1b-ba99-cdf1414ce261"],
Cell[2782, 86, 213, 5, 28, "Input",ExpressionUUID->"1f197adf-b394-455d-9645-ba11428723a1"],
Cell[2998, 93, 816, 25, 82, "Input",ExpressionUUID->"27409783-57f0-48af-b8d2-0382e3360153"],
Cell[3817, 120, 1535, 43, 101, "Input",ExpressionUUID->"57ab6468-c87b-42c2-991f-4582fced7134"],
Cell[5355, 165, 3216, 92, 213, "Input",ExpressionUUID->"6c5c8488-4e15-436b-a4f9-92c522917bd6"],
Cell[8574, 259, 288, 6, 34, "Text",ExpressionUUID->"8a3f2b87-fc33-4771-8145-fd13975cd5eb"],
Cell[8865, 267, 2345, 66, 139, "Input",ExpressionUUID->"8baeb300-d5c9-40ef-b914-243e92942369"],
Cell[11213, 335, 255, 6, 34, "Text",ExpressionUUID->"b48de4ee-fdc5-4b84-9c5b-dcca64436cb4"],
Cell[11471, 343, 2381, 60, 157, "Input",ExpressionUUID->"93775b90-81ce-42d9-b283-e5cf3450436c"],
Cell[13855, 405, 316, 7, 34, "Text",ExpressionUUID->"6335ade4-d0a3-44ff-aedd-f48273b23709"],
Cell[14174, 414, 1679, 43, 181, "Input",ExpressionUUID->"279af610-0380-438a-a2ed-8fa8694f2a6f"],
Cell[CellGroupData[{
Cell[15878, 461, 1535, 39, 119, "Input",ExpressionUUID->"068701f9-2749-416a-a0ee-00700fc05fea"],
Cell[17416, 502, 28085, 513, 270, "Output",ExpressionUUID->"465d20ae-bca8-4a3c-a057-5165db453f0f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45538, 1020, 1438, 37, 119, "Input",ExpressionUUID->"90e96622-f113-4e4b-a55e-4695460119f8"],
Cell[46979, 1059, 69661, 1196, 270, "Output",ExpressionUUID->"55cea93b-aa89-4814-8202-e108fdda9ce4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116677, 2260, 1436, 37, 119, "Input",ExpressionUUID->"68df71fc-fe43-41ff-be74-05bc95e305ee"],
Cell[118116, 2299, 54399, 947, 270, "Output",ExpressionUUID->"53e30933-24c0-47b2-8436-2793d20c5583"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172552, 3251, 1450, 37, 119, "Input",ExpressionUUID->"edb96e70-1c09-462b-93f1-82d324ef8e20"],
Cell[174005, 3290, 53229, 926, 272, "Output",ExpressionUUID->"05e147ff-ba94-4968-9bea-020b99eb1e56"]
}, Open  ]],
Cell[227249, 4219, 668, 12, 100, "Text",ExpressionUUID->"9a27509d-27c6-4d19-95b1-5b14557aaba4"],
Cell[227920, 4233, 4090, 100, 326, "Input",ExpressionUUID->"879e0b73-dc2a-4457-a4d4-0deea5c378d0"],
Cell[232013, 4335, 925, 24, 122, "Input",ExpressionUUID->"ddbeac28-565b-4314-9997-c78d422f1f04"]
}, Closed]],
Cell[CellGroupData[{
Cell[232975, 4364, 186, 3, 48, "Subchapter",ExpressionUUID->"e7ac64da-3fee-4780-b3ef-d6d93e7cb583"],
Cell[233164, 4369, 746, 15, 166, "Text",ExpressionUUID->"38b9bbc3-8d85-4b24-8cc4-b81c5abbbe78"],
Cell[233913, 4386, 201, 3, 45, "Input",ExpressionUUID->"14d9a72d-ca89-48eb-a7f1-d305486bc2ab"],
Cell[234117, 4391, 945, 28, 101, "Input",ExpressionUUID->"2c3ead62-fc76-4bb9-abfc-b678a88378b3"],
Cell[235065, 4421, 2117, 62, 101, "Input",ExpressionUUID->"115ad2e7-0b7f-4367-882a-e1de143b4556"],
Cell[237185, 4485, 1549, 42, 175, "Input",ExpressionUUID->"71fa1430-3d62-43ef-8826-d4cff139ecd8"],
Cell[238737, 4529, 1339, 37, 156, "Input",ExpressionUUID->"0b183b38-41c8-4e58-85bb-7c19d738feab"],
Cell[240079, 4568, 1147, 29, 83, "Input",ExpressionUUID->"4b27c2a4-2b5c-456b-b049-a63e86532eb3"],
Cell[241229, 4599, 2026, 54, 141, "Input",ExpressionUUID->"523f85bd-82b4-4ceb-97fb-5842d67412a8"],
Cell[243258, 4655, 3002, 77, 401, "Input",ExpressionUUID->"0c8c7ef2-95f0-4f56-908f-2b49196a57fd"],
Cell[246263, 4734, 4070, 97, 572, "Input",ExpressionUUID->"45545fae-af21-431a-932f-d5be0f0c3c56"],
Cell[CellGroupData[{
Cell[250358, 4835, 509, 13, 45, "Input",ExpressionUUID->"a1de7ebf-78c9-4ecc-b9d3-79e7b0c8d2e8"],
Cell[250870, 4850, 685, 13, 39, "Message",ExpressionUUID->"176e4755-77df-4028-baab-eb6ee3ec083a"],
Cell[251558, 4865, 685, 13, 39, "Message",ExpressionUUID->"e515b981-22d5-4011-a878-a2d99287403d"],
Cell[252246, 4880, 685, 13, 39, "Message",ExpressionUUID->"82046a80-112e-48dd-80e1-2e085180e6bf"],
Cell[252934, 4895, 540, 11, 21, "Message",ExpressionUUID->"7a42ebce-b80e-4e06-bf49-58145485e984"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253511, 4911, 1202, 34, 82, "Input",ExpressionUUID->"947d03db-d161-420b-ba61-03de66a159e3"],
Cell[254716, 4947, 1656, 42, 251, "Output",ExpressionUUID->"52db355d-1aab-4cf6-bc4b-b16e0604c23d"]
}, Open  ]],
Cell[256387, 4992, 1262, 36, 156, "Input",ExpressionUUID->"672d5e21-491e-47ef-a150-8c352b0e4d1a"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257698, 5034, 187, 3, 67, "Chapter",ExpressionUUID->"cf8c3f92-c61f-411d-a8de-ed00cf3bc3b5"],
Cell[CellGroupData[{
Cell[257910, 5041, 198, 3, 64, "Subchapter",ExpressionUUID->"88f148a1-641c-492d-88b6-92023ca9f54b"],
Cell[258111, 5046, 199, 3, 45, "Input",ExpressionUUID->"aef2da6d-b0c4-4e41-bb4c-98195d605316"],
Cell[258313, 5051, 531, 10, 78, "Text",ExpressionUUID->"0ec923d0-dddb-4292-b7dc-6bb43d4ca13e"],
Cell[258847, 5063, 343, 9, 86, "Input",ExpressionUUID->"f54f7c3b-bbe3-4a61-9bb4-3c67be0e219a"],
Cell[259193, 5074, 1123, 34, 120, "Input",ExpressionUUID->"73b29d35-8e7b-4bd8-974c-f3117eed7f8d"],
Cell[260319, 5110, 1549, 44, 101, "Input",ExpressionUUID->"66f1c32f-e95d-482c-b336-7a50083ba6d3"],
Cell[261871, 5156, 4574, 135, 291, "Input",ExpressionUUID->"2bc72741-b1bb-4a76-bb6a-bc53fd33e7ba"],
Cell[266448, 5293, 1932, 58, 120, "Input",ExpressionUUID->"a7861dfa-ad04-4e17-9666-4bc9eac2c1d0"],
Cell[268383, 5353, 2907, 69, 198, "Input",ExpressionUUID->"fa1bb789-912f-49b7-960d-59a121881d53"],
Cell[271293, 5424, 3879, 95, 363, "Input",ExpressionUUID->"fce93696-ad3e-452d-a72a-f356505adeb2"],
Cell[275175, 5521, 1481, 38, 179, "Input",ExpressionUUID->"002f5bf7-bff4-4d67-844a-f9a17db86418"],
Cell[276659, 5561, 2695, 72, 249, "Input",ExpressionUUID->"eb424db4-bec2-4103-bc54-5a3446c75882"]
}, Closed]],
Cell[CellGroupData[{
Cell[279391, 5638, 190, 3, 48, "Subchapter",ExpressionUUID->"88e3178c-efb8-47d0-85d5-3447aae7b20d"],
Cell[279584, 5643, 353, 7, 56, "Text",ExpressionUUID->"990b7e4d-43f9-4663-a9b2-54bf17db493f"],
Cell[279940, 5652, 200, 3, 45, "Input",ExpressionUUID->"ab77eb47-be9e-4499-b69d-0d172b1eb5c7"],
Cell[280143, 5657, 364, 9, 86, "Input",ExpressionUUID->"42d2b112-318e-45b7-9786-48800441d368"],
Cell[280510, 5668, 1100, 34, 101, "Input",ExpressionUUID->"992a8806-47a3-4161-af41-19c01048be0b"],
Cell[281613, 5704, 1547, 44, 101, "Input",ExpressionUUID->"f91c2a0d-dbb9-49e3-a191-8627e7ccdd12"],
Cell[283163, 5750, 2485, 75, 179, "Input",ExpressionUUID->"a9da7f93-35ab-42f2-9b54-46a9b0a16f36"],
Cell[285651, 5827, 3785, 114, 477, "Input",ExpressionUUID->"06997675-472d-425c-a74d-9d0f61c8b186"],
Cell[289439, 5943, 2298, 57, 142, "Input",ExpressionUUID->"d4db8873-b272-4fd3-8c63-09c2091b948a"],
Cell[291740, 6002, 698, 19, 45, "Input",ExpressionUUID->"a2b253b7-c22e-475e-8c25-9d0a33026df0"],
Cell[292441, 6023, 2742, 74, 289, "Input",ExpressionUUID->"56d46c17-5a9a-4823-ba26-141176038604"],
Cell[295186, 6099, 3708, 94, 306, "Input",ExpressionUUID->"fb14f7c5-ad85-4afa-90c1-0c372e100424"],
Cell[298897, 6195, 220, 4, 28, "Input",ExpressionUUID->"4d87ded2-3193-4bc1-a734-55a3dff2e569"],
Cell[299120, 6201, 537, 13, 45, "Input",ExpressionUUID->"5ce2a898-69a5-4aa7-ba1e-818bdb447fe3"],
Cell[CellGroupData[{
Cell[299682, 6218, 1141, 33, 82, "Input",ExpressionUUID->"18b48d69-2b8f-4384-8d36-a049cfd70f33"],
Cell[300826, 6253, 1565, 41, 251, "Output",ExpressionUUID->"ecdf0e60-d858-4482-9742-855123b1ecc9"]
}, Open  ]],
Cell[302406, 6297, 1226, 34, 156, "Input",ExpressionUUID->"e0b34617-ac3e-42b0-8998-ed7c6f4035dc"]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

